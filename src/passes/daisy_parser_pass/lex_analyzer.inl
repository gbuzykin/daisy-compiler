/* Lexegen autogenerated analyzer file - do not edit! */
/* clang-format off */

static uint8_t symb2meta[256] = {
    0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4, 5, 6, 1, 7, 8,
    1, 1, 1, 9, 10, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 19, 21, 22, 23, 1, 24, 25, 26, 1, 1, 27, 27, 27, 27, 28,
    27, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 30, 29, 29, 1, 31, 1, 32, 29, 1, 33, 34, 27,
    27, 35, 36, 29, 29, 37, 29, 29, 38, 29, 39, 29, 29, 29, 40, 41, 42, 43, 44, 29, 45, 29, 29, 1, 46, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1
};

static int def[98] = {
    -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, -1, 40, 40, -1, -1, -1, 40, 40, 40, 40, 40, 40, 40, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, 32, -1, -1, -1, -1, -1, -1, 67, 73, -1, 75, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
};

static int base[98] = {
    0, 46, 90, 0, 0, 121, 0, 0, 82, 0, 0, 0, 0, 0, 0, 0, 154, 177, 0, 89, 0, 0, 92, 0, 85, 0, 105, 87, 175, 88, 176,
    191, 206, 194, 217, 185, 91, 91, 92, 93, 249, 294, 95, 144, 138, 160, 0, 0, 136, 145, 0, 146, 167, 174, 0, 0, 0, 0,
    0, 189, 0, 0, 215, 0, 0, 0, 245, 331, 229, 221, 226, 225, 0, 245, 0, 340, 216, 349, 228, 235, 240, 0, 0, 0, 0, 249,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
};

static int next[396] = {
    -1, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 35, 35, 35, 35, 35, 35, 35, 36, 37, 38, 39, 40, 40,
    40, 40, 41, 42, 40, 40, 40, 43, 40, 40, 40, 40, 40, 44, 40, 40, 40, 45, 2, 2, 3, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, -1, 22, -1, 19, 19, 19,
    19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 97, 96, 95, 92, 65, 62, 63, 61, 58, 59, 55, -1, 6, 6, 7, 6, 6, 6, 6, 6,
    6, 6, 6, 6, 6, 8, 8, 8, 8, 8, 8, 8, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 9, 10, 6, 11, 6, 6, 12, 13, 6, 14, 6, 15,
    16, 6, 17, 17, 17, 17, 17, 17, 17, 17, 17, 51, 48, 49, 50, 17, 17, 93, 52, 46, 90, 17, 17, 17, 17, 18, 18, 18, 18,
    18, 18, 18, 18, 18, 94, 91, 87, 82, 18, 18, 47, 83, 53, 54, 18, 18, 18, 18, 60, -1, 88, 89, 85, 84, 66, 66, 66, 66,
    66, 66, 66, 66, 66, 66, -1, 35, 35, 35, 35, 35, 35, 35, 35, 35, 64, 72, 72, 72, 69, 67, 70, 75, 81, 71, 72, 81, 67,
    77, 68, -1, -1, -1, 81, 77, 68, 86, 75, 40, 40, 40, 40, 40, 40, 40, 40, 40, -1, 67, -1, -1, 40, 40, 40, 40, 67, -1,
    40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 56, 56, 57, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
    56, 73, 73, -1, -1, 74, 74, 74, 74, 74, 74, 74, 74, 74, 76, 76, 76, 76, 76, 76, 76, 76, 76, -1, 78, -1, 79, 76, 76,
    80, 81, -1, -1, 76, 76, 76, 76, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
};

static int check[396] = {
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 22, 2, 8, 8, 8, 8, 8, 8, 8, 19, 19, 19, 19, 19, 19, 19, 24, 26, 27,
    29, 36, 37, 37, 38, 39, 39, 42, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 16, 16, 16, 16, 16, 16, 16, 16, 16, 43, 44, 48, 49, 16, 16,
    28, 51, 45, 30, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 28, 30, 31, 33, 17, 17, 45, 33, 52, 53, 17, 17,
    17, 17, 59, 35, 31, 31, 32, 33, 32, 32, 32, 32, 32, 32, 32, 32, 32, 34, 35, 34, 34, 34, 34, 34, 34, 34, 34, 34, 62,
    69, 70, 71, 68, 34, 68, 34, 78, 68, 68, 79, 34, 76, 34, 73, 73, 66, 80, 76, 34, 85, 34, 40, 40, 40, 40, 40, 40, 40,
    40, 40, 40, 66, 40, 40, 40, 40, 40, 40, 66, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 41, 41, 41, 41,
    41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
    41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 75, 75, 75,
    75, 75, 75, 75, 75, 75, 67, 77, 67, 77, 75, 75, 77, 77, 67, 67, 75, 75, 75, 75, 67, 75, 75, 75, 75, 75, 75, 75, 75,
    75, 77, 77, 77, 77, 77, 77, 77, 77, 77
};

static int accept[98] = {
    0, 0, 11, 13, 12, 53, 10, 14, 1, 3, 4, 5, 7, 6, 8, 9, 10, 2, 2, 1, 1, 53, 44, 45, 53, 52, 50, 53, 53, 53, 53, 53,
    53, 53, 38, 38, 53, 53, 53, 53, 41, 53, 53, 41, 41, 53, 31, 24, 41, 41, 36, 41, 41, 41, 37, 32, 47, 46, 22, 18, 34,
    19, 17, 21, 33, 48, 40, 0, 38, 0, 0, 0, 38, 0, 40, 0, 39, 39, 0, 0, 0, 39, 43, 42, 28, 0, 49, 16, 26, 35, 15, 25,
    27, 23, 30, 29, 51, 20
};

static int lex(const char* first, const char* last, int** p_sptr, unsigned* p_llen, int has_more) {
    int *sptr = *p_sptr, *sptr0 = sptr - *p_llen;
    int state = *(sptr - 1);
    while (first < last) { /* Analyze till transition is impossible */
        uint8_t meta = symb2meta[(unsigned char)*first];
        do {
            int l = base[state] + meta;
            if (check[l] == state) {
                state = next[l];
                break;
            }
            state = def[state];
        } while (state >= 0);
        if (state < 0) { goto unroll; }
        *sptr++ = state, ++first;
    }
    if (has_more || sptr == sptr0) {
        *p_sptr = sptr;
        *p_llen = (unsigned)(sptr - sptr0);
        return err_end_of_input;
    }
unroll:
    *p_sptr = sptr0;
    while (sptr != sptr0) { /* Unroll down-to last accepting state */
        int n_pat = accept[(state = *(sptr - 1))];
        if (n_pat > 0) {
            *p_llen = (unsigned)(sptr - sptr0);
            return n_pat;
        }
        --sptr;
    }
    *p_llen = 1; /* Accept at least one symbol as default pattern */
    return predef_pat_default;
}
