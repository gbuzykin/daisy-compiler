/* Parsegen autogenerated analyzer file - do not edit! */
/* clang-format off */

static int action_idx[249] = {
    0, 2, 20, 2, 2, 2, 2, 2, 62, 64, 66, 68, 72, 76, 80, 82, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    84, 120, 154, 170, 186, 210, 234, 246, 258, 290, 320, 2, 362, 402, 418, 434, 436, 444, 452, 454, 482, 484, 486, 488,
    530, 532, 534, 536, 552, 554, 558, 560, 564, 566, 570, 574, 578, 582, 586, 588, 590, 608, 612, 616, 618, 622, 624,
    626, 570, 574, 630, 632, 638, 642, 644, 652, 656, 660, 664, 666, 672, 674, 678, 680, 686, 692, 694, 698, 700, 704,
    706, 710, 714, 716, 718, 720, 722, 724, 766, 768, 772, 816, 820, 824, 826, 828, 830, 832, 834, 838, 838, 838, 838,
    868, 838, 870, 874, 876, 878, 880, 570, 666, 882, 914, 882, 918, 914, 960, 962, 914, 966, 838, 838, 838, 838, 838,
    838, 838, 838, 838, 838, 838, 838, 838, 838, 838, 838, 838, 838, 838, 838, 968, 1004, 1038, 1054, 1070, 1094, 1118,
    1130, 1142, 1174, 1204, 838, 1248, 1288, 1304, 1344, 1360, 1362, 1370, 1378, 1380, 1408, 1410, 914, 1412, 1416,
    1422, 1424, 1426, 1428, 1434, 1436, 1440, 1444, 710, 1448, 838, 1450, 666, 1492, 1494, 1496, 1502, 1440, 1504, 838,
    1508, 570, 1550, 1552, 1554, 1556, 1558, 1560, 1562, 1606, 1608, 1610, 1612, 1614, 1618, 1620, 1622, 1628, 1630,
    1632, 1634, 710, 1638, 1642, 1644, 1646, 1652, 1654, 1656, 1662, 1664, 1668, 1670, 1672, 1688, 1690, 1692
};

static int action_list[1694] = {
    -1, 12, 33, 7, 40, 9, 43, 11, 45, 13, 126, 15, 261, 17, 262, 19, 265, 21, -1, -1, 37, 33, 38, 35, 42, 37, 43, 39,
    45, 41, 47, 43, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 260, 123, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274,
    65, 275, 67, 276, 69, -1, -1, -1, 804, -1, 810, -1, 792, 40, 25, -1, -1, 265, 27, -1, -1, 41, 29, -1, -1, -1, 798,
    -1, 702, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 94, 51, 124, 53, 269, 55, 270, 57, 271, 59,
    272, 61, 273, 63, 274, 65, 275, 67, -1, 774, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 94, 51,
    124, 53, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 768, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 269,
    55, 270, 57, -1, 756, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 269, 55, 270, 57, -1, 744, 37, 33, 42, 37, 43, 39, 45,
    41, 47, 43, 60, 45, 62, 47, 269, 55, 270, 57, 273, 63, 274, 65, -1, 732, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 60,
    45, 62, 47, 269, 55, 270, 57, 273, 63, 274, 65, -1, 726, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, -1, 696, 37, 33,
    42, 37, 43, 39, 45, 41, 47, 43, -1, 690, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 94, 51,
    269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 714, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60,
    45, 62, 47, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 720, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41,
    47, 43, 58, 93, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, 275,
    67, 276, 69, -1, -1, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 269,
    55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, 275, 67, 276, 69, -1, 780, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43,
    269, 55, 270, 57, -1, 750, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 269, 55, 270, 57, -1, 738, -1, 678, 37, 33, 42,
    37, 47, 43, -1, 666, 37, 33, 42, 37, 47, 43, -1, 660, -1, 672, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62,
    47, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 708, -1, 684, -1, 648, -1, 654, 37, 33, 38, 35, 41,
    119, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 269, 55, 270, 57, 271, 59, 272, 61,
    273, 63, 274, 65, 275, 67, 276, 69, -1, -1, -1, 786, -1, 762, -1, -1, 59, 131, 258, 133, 259, 135, 288, 137, 289,
    139, 291, 141, 296, 143, -1, -1, -1, 6, 59, 497, -1, -1, -1, 60, 59, 495, -1, -1, -1, 0, 265, 485, -1, -1, 265, 419,
    -1, -1, 265, 175, -1, -1, 265, 145, -1, -1, 123, 147, -1, -1, -1, 204, -1, 222, 38, 159, 59, 161, 125, 163, 258,
    165, 289, 167, 291, 169, 296, 143, 297, 171, -1, 180, 59, 473, -1, -1, 265, 465, -1, -1, -1, 216, 297, 463, -1, 192,
    -1, 264, -1, 210, 59, 461, -1, -1, -1, 186, 59, 219, 123, 221, -1, -1, 40, 177, -1, -1, -1, 114, 38, 159, 265, 180,
    297, 171, -1, 150, 265, 211, -1, -1, 41, 193, -1, -1, 44, 189, -1, 144, -1, 156, 38, 159, 297, 171, -1, 180, -1,
    162, 287, 197, -1, 126, -1, 120, 38, 159, 297, 171, -1, 180, 265, 588, 267, 205, -1, 138, -1, 132, 265, 207, -1, -1,
    -1, 594, 267, 209, -1, 174, -1, 600, 58, 213, -1, -1, 267, 205, -1, 588, -1, 168, -1, 246, -1, 240, -1, 270, -1,
    342, 33, 249, 40, 251, 43, 253, 45, 255, 59, 257, 123, 221, 126, 259, 258, 261, 261, 263, 262, 265, 263, 267, 264,
    269, 265, 588, 267, 205, 289, 271, 290, 273, 292, 275, 294, 277, 295, 279, 296, 143, -1, 360, -1, 366, 59, 455, -1,
    -1, 37, 293, 38, 295, 42, 297, 43, 299, 45, 301, 47, 303, 59, 453, 60, 305, 61, 307, 62, 309, 63, 311, 94, 313, 124,
    315, 269, 317, 270, 319, 271, 321, 272, 323, 273, 325, 274, 327, 275, 329, 276, 331, -1, 348, 265, 451, -1, -1, 125,
    449, -1, -1, -1, 372, -1, 378, -1, 336, -1, 582, -1, 576, 264, 447, -1, 636, 33, 249, 40, 251, 43, 253, 45, 255,
    123, 221, 126, 259, 261, 263, 262, 265, 263, 267, 264, 269, 267, 205, 292, 275, 294, 277, 295, 279, -1, 588, -1,
    414, 59, 433, -1, 354, -1, 618, -1, 624, -1, 630, -1, 606, 33, 249, 40, 251, 43, 253, 45, 255, 123, 221, 126, 259,
    258, 285, 261, 263, 262, 265, 263, 267, 264, 269, 267, 205, 292, 275, 294, 277, 295, 279, -1, 588, 123, 221, -1, -1,
    37, 293, 38, 295, 42, 297, 43, 299, 45, 301, 47, 303, 60, 305, 61, 307, 62, 309, 63, 311, 94, 313, 124, 315, 269,
    317, 270, 319, 271, 321, 272, 323, 273, 325, 274, 327, 275, 329, 276, 331, -1, 294, -1, 300, 293, 289, -1, 324, -1,
    330, 37, 293, 38, 295, 42, 297, 43, 299, 45, 301, 47, 303, 60, 305, 62, 309, 94, 313, 124, 315, 269, 317, 270, 319,
    271, 321, 272, 323, 273, 325, 274, 327, 275, 329, -1, 546, 37, 293, 38, 295, 42, 297, 43, 299, 45, 301, 47, 303, 60,
    305, 62, 309, 94, 313, 124, 315, 269, 317, 270, 319, 271, 321, 272, 323, 273, 325, 274, 327, -1, 540, 37, 293, 42,
    297, 43, 299, 45, 301, 47, 303, 269, 317, 270, 319, -1, 528, 37, 293, 42, 297, 43, 299, 45, 301, 47, 303, 269, 317,
    270, 319, -1, 516, 37, 293, 42, 297, 43, 299, 45, 301, 47, 303, 60, 305, 62, 309, 269, 317, 270, 319, 273, 325, 274,
    327, -1, 504, 37, 293, 42, 297, 43, 299, 45, 301, 47, 303, 60, 305, 62, 309, 269, 317, 270, 319, 273, 325, 274, 327,
    -1, 498, 37, 293, 42, 297, 43, 299, 45, 301, 47, 303, -1, 468, 37, 293, 42, 297, 43, 299, 45, 301, 47, 303, -1, 462,
    37, 293, 38, 295, 42, 297, 43, 299, 45, 301, 47, 303, 60, 305, 62, 309, 94, 313, 269, 317, 270, 319, 271, 321, 272,
    323, 273, 325, 274, 327, -1, 486, 37, 293, 38, 295, 42, 297, 43, 299, 45, 301, 47, 303, 60, 305, 62, 309, 269, 317,
    270, 319, 271, 321, 272, 323, 273, 325, 274, 327, -1, 492, 37, 293, 38, 295, 42, 297, 43, 299, 45, 301, 47, 303, 58,
    355, 60, 305, 61, 307, 62, 309, 63, 311, 94, 313, 124, 315, 269, 317, 270, 319, 271, 321, 272, 323, 273, 325, 274,
    327, 275, 329, 276, 331, -1, -1, 37, 293, 38, 295, 42, 297, 43, 299, 45, 301, 47, 303, 60, 305, 62, 309, 63, 311,
    94, 313, 124, 315, 269, 317, 270, 319, 271, 321, 272, 323, 273, 325, 274, 327, 275, 329, 276, 331, -1, 552, 37, 293,
    42, 297, 43, 299, 45, 301, 47, 303, 269, 317, 270, 319, -1, 522, 37, 293, 38, 295, 42, 297, 43, 299, 45, 301, 47,
    303, 60, 305, 62, 309, 63, 311, 94, 313, 124, 315, 269, 317, 270, 319, 271, 321, 272, 323, 273, 325, 274, 327, 275,
    329, 276, 331, -1, 570, 37, 293, 42, 297, 43, 299, 45, 301, 47, 303, 269, 317, 270, 319, -1, 510, -1, 450, 37, 293,
    42, 297, 47, 303, -1, 438, 37, 293, 42, 297, 47, 303, -1, 432, -1, 444, 37, 293, 42, 297, 43, 299, 45, 301, 47, 303,
    60, 305, 62, 309, 269, 317, 270, 319, 271, 321, 272, 323, 273, 325, 274, 327, -1, 480, -1, 456, -1, 318, 293, 383,
    -1, 282, 123, 221, 292, 275, -1, -1, -1, 312, -1, 306, -1, 288, 44, 409, 59, 411, -1, -1, -1, 84, 265, 397, -1, -1,
    58, 401, -1, 102, 61, 405, -1, -1, -1, 108, 37, 293, 38, 295, 42, 297, 43, 299, 45, 301, 47, 303, 60, 305, 61, 307,
    62, 309, 63, 311, 94, 313, 124, 315, 269, 317, 270, 319, 271, 321, 272, 323, 273, 325, 274, 327, 275, 329, 276, 331,
    -1, 96, -1, 396, -1, 90, 44, 427, 59, 429, -1, -1, -1, 66, 61, 423, -1, -1, 37, 293, 38, 295, 42, 297, 43, 299, 45,
    301, 47, 303, 60, 305, 61, 307, 62, 309, 63, 311, 94, 313, 124, 315, 269, 317, 270, 319, 271, 321, 272, 323, 273,
    325, 274, 327, 275, 329, 276, 331, -1, 78, -1, 390, -1, 72, -1, 408, -1, 474, -1, 420, -1, 426, 37, 293, 38, 295,
    41, 443, 42, 297, 43, 299, 45, 301, 47, 303, 60, 305, 61, 307, 62, 309, 63, 311, 94, 313, 124, 315, 269, 317, 270,
    319, 271, 321, 272, 323, 273, 325, 274, 327, 275, 329, 276, 331, -1, -1, -1, 558, -1, 534, -1, 612, -1, 276, 267,
    209, -1, 564, -1, 384, -1, 402, 44, 427, 59, 459, -1, -1, -1, 228, -1, 258, -1, 198, 58, 467, -1, -1, 59, 471, -1,
    -1, -1, 234, -1, 252, 59, 479, 123, 221, -1, -1, -1, 42, -1, 36, 44, 427, 59, 483, -1, -1, -1, 30, 123, 487, -1, -1,
    -1, 18, -1, 12, 59, 131, 125, 493, 258, 133, 288, 137, 289, 139, 291, 141, 296, 143, -1, -1, -1, 24, -1, 54, -1, 48
};

static int reduce_info[408] = {
    2, 0, 0, 2, 2, 0, 0, 2, 0, 0, 8, 1, 6, 6, 2, 3, 6, 0, 3, 6, 50, 3, 6, 51, 2, 6, 0, 2, 6, 0, 1, 6, 0, 1, 10, 0, 3,
    10, 0, 4, 42, 37, 1, 110, 0, 3, 110, 0, 5, 112, 38, 0, 46, 55, 2, 46, 39, 0, 138, 48, 6, 16, 49, 0, 136, 55, 3, 136,
    53, 2, 136, 54, 1, 134, 0, 0, 134, 0, 1, 140, 0, 3, 140, 0, 4, 142, 52, 2, 126, 56, 0, 116, 57, 1, 116, 58, 1, 116,
    59, 2, 116, 60, 0, 158, 61, 6, 36, 2, 2, 156, 0, 0, 156, 0, 3, 160, 0, 5, 160, 62, 3, 160, 50, 3, 160, 51, 2, 160,
    0, 2, 160, 0, 1, 160, 0, 0, 166, 40, 5, 20, 2, 3, 168, 43, 5, 168, 44, 1, 172, 0, 1, 172, 0, 1, 176, 0, 1, 176, 0,
    2, 178, 45, 3, 178, 46, 5, 178, 47, 2, 162, 0, 0, 162, 0, 1, 164, 41, 1, 164, 0, 0, 164, 0, 1, 182, 0, 1, 182, 0, 1,
    182, 0, 2, 180, 42, 3, 180, 0, 3, 180, 0, 2, 180, 0, 2, 180, 0, 1, 180, 0, 2, 50, 11, 2, 50, 12, 3, 50, 13, 3, 50,
    14, 3, 50, 15, 3, 50, 16, 3, 50, 17, 3, 50, 18, 3, 50, 19, 2, 50, 20, 3, 50, 21, 3, 50, 22, 3, 50, 23, 3, 50, 24, 3,
    50, 25, 3, 50, 26, 3, 50, 27, 3, 50, 28, 3, 50, 29, 2, 50, 30, 3, 50, 31, 3, 50, 32, 5, 50, 33, 3, 50, 34, 2, 50,
    35, 3, 50, 36, 1, 50, 0, 1, 50, 0, 0, 146, 4, 1, 146, 5, 3, 146, 6, 1, 186, 0, 2, 186, 3, 1, 184, 7, 1, 184, 8, 1,
    184, 9, 1, 184, 10, 2, 188, 0, 2, 190, 63, 2, 190, 64, 3, 190, 65, 3, 190, 66, 3, 190, 67, 3, 190, 68, 3, 190, 69,
    3, 190, 70, 3, 190, 71, 2, 190, 72, 3, 190, 73, 3, 190, 74, 3, 190, 75, 3, 190, 76, 3, 190, 77, 3, 190, 78, 3, 190,
    79, 3, 190, 81, 3, 190, 80, 2, 190, 82, 3, 190, 83, 3, 190, 84, 5, 190, 85, 3, 190, 86, 0, 242, 87, 5, 190, 88, 1,
    190, 0, 1, 190, 0
};

static int goto_list[244] = {
    -1, 0, 244, 245, -1, 62, -1, 63, -1, 244, 69, 240, 83, 228, -1, 207, 70, 237, -1, 86, 86, 108, 138, 188, 141, 143,
    144, 145, 189, 190, 191, 192, 237, 238, -1, 113, 75, 76, 112, 114, -1, 64, 213, 215, -1, 208, 209, 210, -1, 199,
    112, 115, 124, 222, 125, 220, 126, 219, 127, 218, 129, 217, 146, 187, 147, 186, 148, 185, 149, 184, 150, 183, 151,
    182, 152, 181, 153, 180, 154, 179, 155, 176, 156, 175, 157, 174, 158, 173, 159, 172, 160, 171, 161, 170, 162, 169,
    163, 168, 164, 167, 165, 166, 177, 178, 202, 203, 211, 212, -1, 140, -1, 195, 204, 206, -1, 196, 75, 77, 98, 99,
    136, 197, 204, 197, -1, 90, 106, 107, 200, 201, 233, 234, -1, 100, -1, 91, -1, 97, -1, 89, -1, 92, 94, 95, -1, 93,
    99, 101, 106, 101, 200, 101, 233, 101, -1, 116, -1, 75, -1, 74, -1, 78, -1, 112, -1, 117, -1, 111, 191, 193, -1,
    118, 137, 189, -1, 141, -1, 194, -1, 119, -1, 120, -1, 121, -1, 122, -1, 123, -1, 0, 3, 60, 4, 58, 5, 57, 6, 56, 7,
    15, 16, 55, 17, 54, 18, 53, 19, 52, 20, 51, 21, 50, 22, 49, 23, 48, 24, 45, 25, 44, 26, 43, 27, 42, 28, 41, 29, 40,
    30, 39, 31, 38, 32, 37, 33, 36, 34, 35, 46, 47, -1, 2, -1, 11
};

static int parse(int tt, int* sptr0, int** p_sptr, int rise_error) {
    enum { kShiftFlag = 1, kFlagCount = 1 };
    int action = rise_error;
    if (action >= 0) {
        const int* action_tbl = &action_list[action_idx[*(*p_sptr - 1)]];
        while (action_tbl[0] >= 0 && action_tbl[0] != tt) { action_tbl += 2; }
        action = action_tbl[1];
    }
    if (action >= 0) {
        if (!(action & kShiftFlag)) {
            const int* info = &reduce_info[action >> kFlagCount];
            const int* goto_tbl = &goto_list[info[1]];
            int state = *((*p_sptr -= info[0]) - 1);
            while (goto_tbl[0] >= 0 && goto_tbl[0] != state) { goto_tbl += 2; }
            *(*p_sptr)++ = goto_tbl[1];
            return predef_act_reduce + info[2];
        }
        *(*p_sptr)++ = action >> kFlagCount;
        return predef_act_shift;
    }
    /* Roll back to state, which can accept error */
    do {
        const int* action_tbl = &action_list[action_idx[*(*p_sptr - 1)]];
        while (action_tbl[0] >= 0 && action_tbl[0] != predef_tt_error) { action_tbl += 2; }
        if (action_tbl[1] >= 0 && (action_tbl[1] & kShiftFlag)) { /* Can recover */
            *(*p_sptr)++ = action_tbl[1] >> kFlagCount;           /* Shift error token */
            break;
        }
    } while (--*p_sptr != sptr0);
    return action;
}
