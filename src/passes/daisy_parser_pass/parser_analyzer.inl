/* Parsegen autogenerated analyzer file - do not edit! */
/* clang-format off */

static int action_idx[216] = {
    0, 2, 20, 2, 2, 2, 2, 2, 62, 64, 66, 68, 72, 76, 80, 82, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    84, 120, 154, 170, 186, 210, 234, 246, 258, 290, 320, 2, 362, 402, 418, 434, 436, 444, 452, 454, 482, 484, 486, 488,
    530, 532, 534, 536, 550, 552, 554, 558, 560, 564, 568, 572, 578, 582, 584, 588, 592, 596, 598, 602, 608, 610, 614,
    616, 620, 622, 626, 628, 632, 634, 638, 602, 640, 642, 644, 646, 648, 650, 690, 692, 734, 738, 742, 744, 746, 748,
    750, 752, 756, 756, 756, 756, 788, 756, 790, 794, 796, 798, 800, 564, 802, 806, 840, 806, 844, 840, 884, 886, 840,
    890, 756, 756, 756, 756, 756, 756, 756, 756, 756, 756, 756, 756, 756, 756, 756, 756, 756, 756, 756, 892, 928, 962,
    978, 994, 1018, 1042, 1054, 1066, 1098, 1128, 756, 1170, 1210, 1226, 1242, 1244, 1252, 1260, 1262, 1290, 1292, 840,
    1294, 1298, 1304, 1306, 1308, 1310, 1316, 1318, 1322, 602, 1326, 756, 1330, 802, 1370, 1372, 1374, 1380, 1382, 1386,
    602, 1390, 756, 1392, 564, 1432, 1434, 1436, 1438, 1440, 1442, 1444, 1486, 1488, 1490, 1492, 1494, 1496, 1502, 1504,
    1508, 1510, 1512, 1526, 1528
};

static int action_list[1530] = {
    -1, 12, 33, 7, 40, 9, 43, 11, 45, 13, 126, 15, 261, 17, 262, 19, 265, 21, -1, -1, 37, 33, 38, 35, 42, 37, 43, 39,
    45, 41, 47, 43, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 260, 123, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274,
    65, 275, 67, 276, 69, -1, -1, -1, 696, -1, 702, -1, 684, 40, 25, -1, -1, 265, 27, -1, -1, 41, 29, -1, -1, -1, 690,
    -1, 594, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 94, 51, 124, 53, 269, 55, 270, 57, 271, 59,
    272, 61, 273, 63, 274, 65, 275, 67, -1, 666, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 94, 51,
    124, 53, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 660, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 269,
    55, 270, 57, -1, 648, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 269, 55, 270, 57, -1, 636, 37, 33, 42, 37, 43, 39, 45,
    41, 47, 43, 60, 45, 62, 47, 269, 55, 270, 57, 273, 63, 274, 65, -1, 624, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 60,
    45, 62, 47, 269, 55, 270, 57, 273, 63, 274, 65, -1, 618, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, -1, 588, 37, 33,
    42, 37, 43, 39, 45, 41, 47, 43, -1, 582, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 94, 51,
    269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 606, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60,
    45, 62, 47, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 612, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41,
    47, 43, 58, 93, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, 275,
    67, 276, 69, -1, -1, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 269,
    55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, 275, 67, 276, 69, -1, 672, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43,
    269, 55, 270, 57, -1, 642, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 269, 55, 270, 57, -1, 630, -1, 570, 37, 33, 42,
    37, 47, 43, -1, 558, 37, 33, 42, 37, 47, 43, -1, 552, -1, 564, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62,
    47, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 600, -1, 576, -1, 540, -1, 546, 37, 33, 38, 35, 41,
    119, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 269, 55, 270, 57, 271, 59, 272, 61,
    273, 63, 274, 65, 275, 67, 276, 69, -1, -1, -1, 678, -1, 654, -1, -1, 59, 129, 258, 131, 259, 133, 288, 135, 289,
    137, 291, 139, -1, -1, -1, 6, -1, 54, 59, 431, -1, -1, -1, 0, 265, 421, -1, -1, 265, 379, -1, -1, 265, 143, -1, -1,
    59, 187, 123, 189, -1, -1, 40, 145, -1, -1, -1, 120, 265, 155, -1, 150, 41, 177, -1, -1, 44, 173, -1, 144, -1, 156,
    58, 157, -1, -1, 265, 163, 267, 165, -1, -1, -1, 168, 267, 169, -1, 114, -1, 480, 265, 167, -1, -1, -1, 486, 265,
    171, -1, -1, -1, 492, 265, 155, -1, -1, -1, 162, 287, 181, -1, 138, -1, 126, -1, 132, -1, 42, -1, 36, -1, 174, -1,
    246, 33, 215, 40, 217, 43, 219, 45, 221, 59, 223, 123, 189, 126, 225, 258, 227, 261, 229, 262, 231, 263, 233, 264,
    235, 265, 163, 267, 165, 289, 237, 290, 239, 292, 241, 294, 243, 295, 245, -1, 264, -1, 270, 37, 259, 38, 261, 42,
    263, 43, 265, 45, 267, 47, 269, 59, 415, 60, 271, 62, 273, 63, 275, 94, 277, 124, 279, 269, 281, 270, 283, 271, 285,
    272, 287, 273, 289, 274, 291, 275, 293, 276, 295, -1, 252, 267, 169, -1, 462, 125, 413, -1, -1, -1, 276, -1, 282,
    -1, 240, -1, 474, -1, 468, 264, 411, -1, 528, 33, 215, 40, 217, 43, 219, 45, 221, 123, 189, 126, 225, 261, 229, 262,
    231, 263, 233, 264, 235, 265, 163, 267, 165, 292, 241, 294, 243, 295, 245, -1, -1, -1, 312, 59, 397, -1, 258, -1,
    510, -1, 516, -1, 522, -1, 498, 265, 357, -1, -1, 33, 215, 40, 217, 43, 219, 45, 221, 123, 189, 126, 225, 258, 251,
    261, 229, 262, 231, 263, 233, 264, 235, 265, 163, 267, 165, 292, 241, 294, 243, 295, 245, -1, -1, 123, 189, -1, -1,
    37, 259, 38, 261, 42, 263, 43, 265, 45, 267, 47, 269, 60, 271, 62, 273, 63, 275, 94, 277, 124, 279, 269, 281, 270,
    283, 271, 285, 272, 287, 273, 289, 274, 291, 275, 293, 276, 295, -1, 198, -1, 204, 293, 255, -1, 228, -1, 234, 37,
    259, 38, 261, 42, 263, 43, 265, 45, 267, 47, 269, 60, 271, 62, 273, 94, 277, 124, 279, 269, 281, 270, 283, 271, 285,
    272, 287, 273, 289, 274, 291, 275, 293, -1, 444, 37, 259, 38, 261, 42, 263, 43, 265, 45, 267, 47, 269, 60, 271, 62,
    273, 94, 277, 124, 279, 269, 281, 270, 283, 271, 285, 272, 287, 273, 289, 274, 291, -1, 438, 37, 259, 42, 263, 43,
    265, 45, 267, 47, 269, 269, 281, 270, 283, -1, 426, 37, 259, 42, 263, 43, 265, 45, 267, 47, 269, 269, 281, 270, 283,
    -1, 414, 37, 259, 42, 263, 43, 265, 45, 267, 47, 269, 60, 271, 62, 273, 269, 281, 270, 283, 273, 289, 274, 291, -1,
    402, 37, 259, 42, 263, 43, 265, 45, 267, 47, 269, 60, 271, 62, 273, 269, 281, 270, 283, 273, 289, 274, 291, -1, 396,
    37, 259, 42, 263, 43, 265, 45, 267, 47, 269, -1, 366, 37, 259, 42, 263, 43, 265, 45, 267, 47, 269, -1, 360, 37, 259,
    38, 261, 42, 263, 43, 265, 45, 267, 47, 269, 60, 271, 62, 273, 94, 277, 269, 281, 270, 283, 271, 285, 272, 287, 273,
    289, 274, 291, -1, 384, 37, 259, 38, 261, 42, 263, 43, 265, 45, 267, 47, 269, 60, 271, 62, 273, 269, 281, 270, 283,
    271, 285, 272, 287, 273, 289, 274, 291, -1, 390, 37, 259, 38, 261, 42, 263, 43, 265, 45, 267, 47, 269, 58, 319, 60,
    271, 62, 273, 63, 275, 94, 277, 124, 279, 269, 281, 270, 283, 271, 285, 272, 287, 273, 289, 274, 291, 275, 293, 276,
    295, -1, -1, 37, 259, 38, 261, 42, 263, 43, 265, 45, 267, 47, 269, 60, 271, 62, 273, 63, 275, 94, 277, 124, 279,
    269, 281, 270, 283, 271, 285, 272, 287, 273, 289, 274, 291, 275, 293, 276, 295, -1, 450, 37, 259, 42, 263, 43, 265,
    45, 267, 47, 269, 269, 281, 270, 283, -1, 420, 37, 259, 42, 263, 43, 265, 45, 267, 47, 269, 269, 281, 270, 283, -1,
    408, -1, 348, 37, 259, 42, 263, 47, 269, -1, 336, 37, 259, 42, 263, 47, 269, -1, 330, -1, 342, 37, 259, 42, 263, 43,
    265, 45, 267, 47, 269, 60, 271, 62, 273, 269, 281, 270, 283, 271, 285, 272, 287, 273, 289, 274, 291, -1, 378, -1,
    354, -1, 222, 293, 345, -1, 186, 123, 189, 292, 241, -1, -1, -1, 216, -1, 210, -1, 192, 44, 369, 59, 371, -1, -1,
    -1, 78, 58, 361, -1, 108, 61, 365, -1, -1, 61, 102, -1, 96, 37, 259, 38, 261, 42, 263, 43, 265, 45, 267, 47, 269,
    60, 271, 62, 273, 63, 275, 94, 277, 124, 279, 269, 281, 270, 283, 271, 285, 272, 287, 273, 289, 274, 291, 275, 293,
    276, 295, -1, 90, -1, 300, -1, 84, 44, 391, 59, 393, -1, -1, -1, 60, 58, 383, -1, 108, 61, 387, -1, -1, -1, 102, 37,
    259, 38, 261, 42, 263, 43, 265, 45, 267, 47, 269, 60, 271, 62, 273, 63, 275, 94, 277, 124, 279, 269, 281, 270, 283,
    271, 285, 272, 287, 273, 289, 274, 291, 275, 293, 276, 295, -1, 72, -1, 294, -1, 66, -1, 306, -1, 372, -1, 318, -1,
    324, 37, 259, 38, 261, 41, 407, 42, 263, 43, 265, 45, 267, 47, 269, 60, 271, 62, 273, 63, 275, 94, 277, 124, 279,
    269, 281, 270, 283, 271, 285, 272, 287, 273, 289, 274, 291, 275, 293, 276, 295, -1, -1, -1, 456, -1, 432, -1, 504,
    -1, 180, -1, 288, 44, 391, 59, 419, -1, -1, -1, 30, 123, 423, -1, -1, -1, 18, -1, 12, 59, 129, 125, 429, 258, 131,
    288, 135, 289, 137, 291, 139, -1, -1, -1, 24, -1, 48
};

static int reduce_info[354] = {
    2, 0, 0, 2, 2, 0, 0, 2, 0, 0, 8, 1, 6, 6, 2, 3, 6, 0, 3, 6, 48, 3, 6, 49, 2, 6, 0, 1, 6, 0, 1, 10, 0, 3, 10, 0, 4,
    30, 36, 1, 96, 0, 3, 96, 0, 4, 98, 37, 3, 98, 38, 2, 34, 0, 0, 34, 0, 1, 102, 0, 0, 124, 47, 6, 14, 0, 2, 122, 0, 0,
    122, 0, 1, 120, 0, 0, 120, 0, 1, 126, 0, 3, 126, 0, 3, 128, 50, 0, 136, 39, 5, 16, 2, 3, 138, 42, 5, 138, 43, 1,
    142, 0, 1, 142, 0, 1, 146, 0, 1, 146, 0, 2, 148, 44, 3, 148, 45, 5, 148, 46, 2, 132, 0, 0, 132, 0, 1, 134, 40, 1,
    134, 0, 0, 134, 0, 1, 152, 0, 1, 152, 0, 1, 152, 0, 2, 150, 41, 3, 150, 0, 3, 150, 0, 2, 150, 0, 1, 150, 0, 2, 38,
    11, 2, 38, 12, 3, 38, 13, 3, 38, 14, 3, 38, 15, 3, 38, 16, 3, 38, 17, 3, 38, 18, 3, 38, 19, 2, 38, 20, 3, 38, 21, 3,
    38, 22, 3, 38, 23, 3, 38, 24, 3, 38, 25, 3, 38, 26, 3, 38, 27, 3, 38, 28, 3, 38, 29, 2, 38, 30, 3, 38, 31, 3, 38,
    32, 5, 38, 33, 3, 38, 34, 1, 38, 35, 1, 38, 0, 1, 38, 0, 1, 110, 4, 2, 110, 5, 3, 110, 6, 1, 156, 0, 2, 156, 3, 1,
    154, 7, 1, 154, 8, 1, 154, 9, 1, 154, 10, 2, 158, 0, 2, 160, 51, 2, 160, 52, 3, 160, 53, 3, 160, 54, 3, 160, 55, 3,
    160, 56, 3, 160, 57, 3, 160, 58, 3, 160, 59, 2, 160, 60, 3, 160, 61, 3, 160, 62, 3, 160, 63, 3, 160, 64, 3, 160, 65,
    3, 160, 66, 3, 160, 67, 3, 160, 69, 3, 160, 68, 2, 160, 70, 3, 160, 71, 3, 160, 72, 5, 160, 73, 3, 160, 74, 0, 212,
    75, 5, 160, 76, 1, 160, 0, 1, 160, 0
};

static int goto_list[214] = {
    -1, 0, 212, 213, -1, 62, -1, 63, -1, 212, 68, 208, -1, 187, -1, 70, 70, 92, 121, 169, 124, 126, 127, 128, 170, 171,
    172, 173, -1, 97, 195, 197, -1, 188, 189, 190, -1, 179, 96, 98, 107, 204, 108, 202, 109, 201, 110, 200, 112, 199,
    129, 168, 130, 167, 131, 166, 132, 165, 133, 164, 134, 163, 135, 162, 136, 161, 137, 158, 138, 157, 139, 156, 140,
    155, 141, 154, 142, 153, 143, 152, 144, 151, 145, 150, 146, 149, 147, 148, 159, 160, 182, 183, 193, 194, -1, 123,
    -1, 176, 184, 186, -1, 177, 90, 91, 180, 181, 191, 192, -1, 79, 78, 80, 90, 80, 180, 80, 191, 80, -1, 99, -1, 74,
    -1, 89, -1, 73, -1, 75, 86, 87, -1, 76, -1, 96, -1, 100, -1, 95, 172, 174, -1, 101, 120, 170, -1, 124, -1, 175, -1,
    102, -1, 103, -1, 104, -1, 105, -1, 106, -1, 0, 3, 60, 4, 58, 5, 57, 6, 56, 7, 15, 16, 55, 17, 54, 18, 53, 19, 52,
    20, 51, 21, 50, 22, 49, 23, 48, 24, 45, 25, 44, 26, 43, 27, 42, 28, 41, 29, 40, 30, 39, 31, 38, 32, 37, 33, 36, 34,
    35, 46, 47, -1, 2, -1, 11
};

static int parse(int tt, int* sptr0, int** p_sptr, int rise_error) {
    enum { kShiftFlag = 1, kFlagCount = 1 };
    int action = rise_error;
    if (action >= 0) {
        const int* action_tbl = &action_list[action_idx[*(*p_sptr - 1)]];
        while (action_tbl[0] >= 0 && action_tbl[0] != tt) { action_tbl += 2; }
        action = action_tbl[1];
    }
    if (action >= 0) {
        if (!(action & kShiftFlag)) {
            const int* info = &reduce_info[action >> kFlagCount];
            const int* goto_tbl = &goto_list[info[1]];
            int state = *((*p_sptr -= info[0]) - 1);
            while (goto_tbl[0] >= 0 && goto_tbl[0] != state) { goto_tbl += 2; }
            *(*p_sptr)++ = goto_tbl[1];
            return predef_act_reduce + info[2];
        }
        *(*p_sptr)++ = action >> kFlagCount;
        return predef_act_shift;
    }
    /* Roll back to state, which can accept error */
    do {
        const int* action_tbl = &action_list[action_idx[*(*p_sptr - 1)]];
        while (action_tbl[0] >= 0 && action_tbl[0] != predef_tt_error) { action_tbl += 2; }
        if (action_tbl[1] >= 0 && (action_tbl[1] & kShiftFlag)) { /* Can recover */
            *(*p_sptr)++ = action_tbl[1] >> kFlagCount;           /* Shift error token */
            break;
        }
    } while (--*p_sptr != sptr0);
    return action;
}
