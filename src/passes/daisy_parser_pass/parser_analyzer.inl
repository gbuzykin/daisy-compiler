/* Parsegen autogenerated analyzer file - do not edit! */
/* clang-format off */

static int action_idx[195] = {
    0, 2, 20, 2, 2, 2, 2, 2, 62, 64, 66, 68, 72, 76, 80, 82, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    84, 120, 154, 170, 186, 210, 234, 246, 258, 290, 320, 2, 362, 402, 418, 434, 436, 444, 452, 454, 482, 484, 486, 488,
    530, 532, 534, 536, 548, 550, 552, 556, 558, 562, 566, 572, 574, 578, 582, 588, 590, 594, 596, 600, 602, 606, 608,
    640, 680, 684, 686, 688, 690, 692, 694, 608, 608, 608, 608, 698, 608, 700, 702, 704, 706, 708, 742, 708, 746, 742,
    786, 788, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 608, 790, 826,
    860, 876, 892, 916, 940, 952, 964, 996, 1026, 608, 1068, 1108, 1124, 1140, 1142, 1150, 1158, 1160, 1188, 1190, 742,
    1192, 1196, 1202, 1204, 1206, 1208, 1210, 1212, 1252, 1294, 1298, 1300, 1302, 562, 1306, 1310, 1316, 1318, 1322,
    582, 1326, 608, 1330, 1306, 1370, 1372, 1374, 562, 1380, 1382, 1384, 1386, 1388, 1390, 1392, 1394, 1436, 1438, 1440,
    1442, 1444, 1448, 1450, 1452, 1464, 1466
};

static int action_list[1468] = {
    -1, 12, 33, 7, 40, 9, 43, 11, 45, 13, 126, 15, 261, 17, 262, 19, 265, 21, -1, -1, 37, 33, 38, 35, 42, 37, 43, 39,
    45, 41, 47, 43, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 260, 123, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274,
    65, 275, 67, 276, 69, -1, -1, -1, 624, -1, 630, -1, 612, 40, 25, -1, -1, 265, 27, -1, -1, 41, 29, -1, -1, -1, 618,
    -1, 522, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 94, 51, 124, 53, 269, 55, 270, 57, 271, 59,
    272, 61, 273, 63, 274, 65, 275, 67, -1, 594, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 94, 51,
    124, 53, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 588, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 269,
    55, 270, 57, -1, 576, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 269, 55, 270, 57, -1, 564, 37, 33, 42, 37, 43, 39, 45,
    41, 47, 43, 60, 45, 62, 47, 269, 55, 270, 57, 273, 63, 274, 65, -1, 552, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 60,
    45, 62, 47, 269, 55, 270, 57, 273, 63, 274, 65, -1, 546, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, -1, 516, 37, 33,
    42, 37, 43, 39, 45, 41, 47, 43, -1, 510, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 94, 51,
    269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 534, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60,
    45, 62, 47, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 540, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41,
    47, 43, 58, 93, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, 275,
    67, 276, 69, -1, -1, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 269,
    55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, 275, 67, 276, 69, -1, 600, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43,
    269, 55, 270, 57, -1, 570, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 269, 55, 270, 57, -1, 558, -1, 498, 37, 33, 42,
    37, 47, 43, -1, 486, 37, 33, 42, 37, 47, 43, -1, 480, -1, 492, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62,
    47, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 528, -1, 504, -1, 468, -1, 474, 37, 33, 38, 35, 41,
    119, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 269, 55, 270, 57, 271, 59, 272, 61,
    273, 63, 274, 65, 275, 67, 276, 69, -1, -1, -1, 606, -1, 582, -1, -1, 59, 129, 258, 131, 259, 133, 288, 135, 289,
    137, -1, -1, -1, 6, -1, 42, 59, 389, -1, -1, -1, 0, 265, 379, -1, -1, 265, 143, -1, -1, 44, 353, 59, 377, -1, -1,
    -1, 48, 58, 147, -1, 96, 61, 163, -1, -1, 265, 153, 267, 155, -1, -1, -1, 90, 267, 159, -1, 102, -1, 408, 265, 157,
    -1, -1, -1, 414, 265, 161, -1, -1, -1, 420, 33, 181, 40, 183, 43, 185, 45, 187, 123, 189, 126, 191, 261, 193, 262,
    195, 263, 197, 264, 199, 265, 153, 267, 155, 291, 201, 293, 203, 294, 205, -1, -1, 37, 215, 38, 217, 42, 219, 43,
    221, 45, 223, 47, 225, 60, 227, 62, 229, 63, 231, 94, 233, 124, 235, 269, 237, 270, 239, 271, 241, 272, 243, 273,
    245, 274, 247, 275, 249, 276, 251, -1, 60, 267, 159, -1, 390, -1, 198, -1, 204, -1, 210, -1, 402, -1, 396, 264, 375,
    -1, 456, -1, 108, -1, 438, -1, 444, -1, 450, -1, 426, 33, 181, 40, 183, 43, 185, 45, 187, 123, 189, 126, 191, 258,
    211, 261, 193, 262, 195, 263, 197, 264, 199, 265, 153, 267, 155, 291, 201, 293, 203, 294, 205, -1, -1, 123, 189, -1,
    -1, 37, 215, 38, 217, 42, 219, 43, 221, 45, 223, 47, 225, 60, 227, 62, 229, 63, 231, 94, 233, 124, 235, 269, 237,
    270, 239, 271, 241, 272, 243, 273, 245, 274, 247, 275, 249, 276, 251, -1, 132, -1, 138, -1, 162, 37, 215, 38, 217,
    42, 219, 43, 221, 45, 223, 47, 225, 60, 227, 62, 229, 94, 233, 124, 235, 269, 237, 270, 239, 271, 241, 272, 243,
    273, 245, 274, 247, 275, 249, -1, 372, 37, 215, 38, 217, 42, 219, 43, 221, 45, 223, 47, 225, 60, 227, 62, 229, 94,
    233, 124, 235, 269, 237, 270, 239, 271, 241, 272, 243, 273, 245, 274, 247, -1, 366, 37, 215, 42, 219, 43, 221, 45,
    223, 47, 225, 269, 237, 270, 239, -1, 354, 37, 215, 42, 219, 43, 221, 45, 223, 47, 225, 269, 237, 270, 239, -1, 342,
    37, 215, 42, 219, 43, 221, 45, 223, 47, 225, 60, 227, 62, 229, 269, 237, 270, 239, 273, 245, 274, 247, -1, 330, 37,
    215, 42, 219, 43, 221, 45, 223, 47, 225, 60, 227, 62, 229, 269, 237, 270, 239, 273, 245, 274, 247, -1, 324, 37, 215,
    42, 219, 43, 221, 45, 223, 47, 225, -1, 294, 37, 215, 42, 219, 43, 221, 45, 223, 47, 225, -1, 288, 37, 215, 38, 217,
    42, 219, 43, 221, 45, 223, 47, 225, 60, 227, 62, 229, 94, 233, 269, 237, 270, 239, 271, 241, 272, 243, 273, 245,
    274, 247, -1, 312, 37, 215, 38, 217, 42, 219, 43, 221, 45, 223, 47, 225, 60, 227, 62, 229, 269, 237, 270, 239, 271,
    241, 272, 243, 273, 245, 274, 247, -1, 318, 37, 215, 38, 217, 42, 219, 43, 221, 45, 223, 47, 225, 58, 275, 60, 227,
    62, 229, 63, 231, 94, 233, 124, 235, 269, 237, 270, 239, 271, 241, 272, 243, 273, 245, 274, 247, 275, 249, 276, 251,
    -1, -1, 37, 215, 38, 217, 42, 219, 43, 221, 45, 223, 47, 225, 60, 227, 62, 229, 63, 231, 94, 233, 124, 235, 269,
    237, 270, 239, 271, 241, 272, 243, 273, 245, 274, 247, 275, 249, 276, 251, -1, 378, 37, 215, 42, 219, 43, 221, 45,
    223, 47, 225, 269, 237, 270, 239, -1, 348, 37, 215, 42, 219, 43, 221, 45, 223, 47, 225, 269, 237, 270, 239, -1, 336,
    -1, 276, 37, 215, 42, 219, 47, 225, -1, 264, 37, 215, 42, 219, 47, 225, -1, 258, -1, 270, 37, 215, 42, 219, 43, 221,
    45, 223, 47, 225, 60, 227, 62, 229, 269, 237, 270, 239, 271, 241, 272, 243, 273, 245, 274, 247, -1, 306, -1, 282,
    -1, 156, 292, 301, -1, 120, 123, 189, 291, 201, -1, -1, -1, 150, -1, 144, -1, 126, -1, 300, -1, 174, 33, 181, 40,
    183, 43, 185, 45, 187, 59, 321, 123, 189, 126, 191, 258, 323, 261, 193, 262, 195, 263, 197, 264, 199, 265, 153, 267,
    155, 289, 325, 290, 327, 291, 201, 293, 203, 294, 205, -1, 192, 37, 215, 38, 217, 42, 219, 43, 221, 45, 223, 47,
    225, 59, 363, 60, 227, 62, 229, 63, 231, 94, 233, 124, 235, 269, 237, 270, 239, 271, 241, 272, 243, 273, 245, 274,
    247, 275, 249, 276, 251, -1, 180, 125, 361, -1, -1, -1, 168, -1, 240, 59, 359, -1, 186, 265, 333, -1, -1, 44, 345,
    59, 347, -1, -1, -1, 66, 58, 337, -1, 96, 61, 341, -1, -1, 61, 90, -1, 84, 37, 215, 38, 217, 42, 219, 43, 221, 45,
    223, 47, 225, 60, 227, 62, 229, 63, 231, 94, 233, 124, 235, 269, 237, 270, 239, 271, 241, 272, 243, 273, 245, 274,
    247, 275, 249, 276, 251, -1, 78, -1, 228, -1, 72, 44, 353, 59, 355, -1, -1, -1, 222, -1, 54, -1, 234, -1, 114, -1,
    216, -1, 246, -1, 252, 37, 215, 38, 217, 41, 371, 42, 219, 43, 221, 45, 223, 47, 225, 60, 227, 62, 229, 63, 231, 94,
    233, 124, 235, 269, 237, 270, 239, 271, 241, 272, 243, 273, 245, 274, 247, 275, 249, 276, 251, -1, -1, -1, 384, -1,
    360, -1, 432, -1, 30, 123, 381, -1, -1, -1, 18, -1, 12, 59, 129, 125, 387, 258, 131, 288, 135, 289, 137, -1, -1, -1,
    24, -1, 36
};

static int reduce_info[318] = {
    2, 0, 0, 2, 2, 0, 0, 2, 0, 0, 8, 1, 6, 6, 2, 3, 6, 0, 2, 6, 0, 1, 6, 0, 1, 10, 0, 3, 10, 0, 4, 14, 36, 1, 80, 0, 3,
    80, 0, 4, 82, 37, 3, 82, 38, 2, 18, 0, 0, 18, 0, 1, 86, 0, 0, 110, 39, 5, 96, 2, 3, 112, 0, 5, 112, 0, 1, 116, 0, 1,
    116, 0, 1, 120, 0, 1, 120, 0, 2, 122, 0, 3, 122, 0, 2, 106, 0, 0, 106, 0, 1, 108, 40, 1, 108, 0, 0, 108, 0, 1, 126,
    0, 1, 126, 0, 1, 126, 0, 2, 124, 41, 3, 124, 0, 3, 124, 0, 2, 124, 0, 1, 124, 0, 2, 22, 11, 2, 22, 12, 3, 22, 13, 3,
    22, 14, 3, 22, 15, 3, 22, 16, 3, 22, 17, 3, 22, 18, 3, 22, 19, 2, 22, 20, 3, 22, 21, 3, 22, 22, 3, 22, 23, 3, 22,
    24, 3, 22, 25, 3, 22, 26, 3, 22, 27, 3, 22, 28, 3, 22, 29, 2, 22, 30, 3, 22, 31, 3, 22, 32, 5, 22, 33, 3, 22, 34, 1,
    22, 35, 1, 22, 0, 1, 22, 0, 1, 90, 4, 2, 90, 5, 3, 90, 6, 1, 130, 0, 2, 130, 3, 1, 128, 7, 1, 128, 8, 1, 128, 9, 1,
    128, 10, 2, 132, 0, 2, 134, 42, 2, 134, 43, 3, 134, 44, 3, 134, 45, 3, 134, 46, 3, 134, 47, 3, 134, 48, 3, 134, 49,
    3, 134, 50, 2, 134, 51, 3, 134, 52, 3, 134, 53, 3, 134, 54, 3, 134, 55, 3, 134, 56, 3, 134, 57, 3, 134, 58, 3, 134,
    60, 3, 134, 59, 2, 134, 61, 3, 134, 62, 3, 134, 63, 5, 134, 64, 3, 134, 65, 0, 186, 66, 5, 134, 67, 1, 134, 0, 1,
    134, 0
};

static int goto_list[188] = {
    -1, 0, 191, 192, -1, 62, -1, 63, -1, 191, 162, 175, -1, 69, 176, 178, -1, 70, 166, 167, -1, 72, 81, 82, 90, 186, 91,
    184, 92, 183, 93, 182, 95, 154, 107, 146, 108, 145, 109, 144, 110, 143, 111, 142, 112, 141, 113, 140, 114, 139, 115,
    136, 116, 135, 117, 134, 118, 133, 119, 132, 120, 131, 121, 130, 122, 129, 123, 128, 124, 127, 125, 126, 137, 138,
    156, 157, 170, 171, -1, 103, -1, 164, 172, 174, -1, 165, 168, 169, -1, 74, 73, 75, 168, 75, -1, 83, 101, 147, 104,
    106, 148, 149, 150, 151, -1, 84, -1, 156, -1, 158, -1, 155, 150, 152, -1, 85, 100, 148, -1, 104, -1, 153, -1, 86,
    -1, 159, -1, 87, -1, 88, -1, 89, -1, 0, 3, 60, 4, 58, 5, 57, 6, 56, 7, 15, 16, 55, 17, 54, 18, 53, 19, 52, 20, 51,
    21, 50, 22, 49, 23, 48, 24, 45, 25, 44, 26, 43, 27, 42, 28, 41, 29, 40, 30, 39, 31, 38, 32, 37, 33, 36, 34, 35, 46,
    47, -1, 2, -1, 11
};

static int parse(int tt, int* sptr0, int** p_sptr, int rise_error) {
    enum { kShiftFlag = 1, kFlagCount = 1 };
    int action = rise_error;
    if (action >= 0) {
        const int* action_tbl = &action_list[action_idx[*(*p_sptr - 1)]];
        while (action_tbl[0] >= 0 && action_tbl[0] != tt) { action_tbl += 2; }
        action = action_tbl[1];
    }
    if (action >= 0) {
        if (!(action & kShiftFlag)) {
            const int* info = &reduce_info[action >> kFlagCount];
            const int* goto_tbl = &goto_list[info[1]];
            int state = *((*p_sptr -= info[0]) - 1);
            while (goto_tbl[0] >= 0 && goto_tbl[0] != state) { goto_tbl += 2; }
            *(*p_sptr)++ = goto_tbl[1];
            return predef_act_reduce + info[2];
        }
        *(*p_sptr)++ = action >> kFlagCount;
        return predef_act_shift;
    }
    /* Roll back to state, which can accept error */
    do {
        const int* action_tbl = &action_list[action_idx[*(*p_sptr - 1)]];
        while (action_tbl[0] >= 0 && action_tbl[0] != predef_tt_error) { action_tbl += 2; }
        if (action_tbl[1] >= 0 && (action_tbl[1] & kShiftFlag)) { /* Can recover */
            *(*p_sptr)++ = action_tbl[1] >> kFlagCount;           /* Shift error token */
            break;
        }
    } while (--*p_sptr != sptr0);
    return action;
}
