/* Parsegen autogenerated analyzer file - do not edit! */
/* clang-format off */

static int action_idx[258] = {
    0, 2, 20, 2, 2, 2, 2, 2, 62, 64, 66, 68, 72, 76, 80, 82, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    84, 120, 154, 170, 186, 210, 234, 246, 258, 290, 320, 2, 362, 402, 418, 434, 436, 444, 452, 454, 482, 484, 486, 488,
    530, 532, 534, 536, 552, 554, 558, 560, 564, 566, 570, 574, 578, 582, 586, 588, 590, 608, 612, 616, 618, 622, 624,
    626, 570, 574, 630, 632, 638, 642, 644, 652, 656, 660, 664, 666, 672, 674, 678, 680, 686, 692, 694, 698, 700, 704,
    706, 710, 714, 716, 718, 720, 722, 724, 766, 768, 772, 818, 822, 826, 828, 830, 832, 834, 836, 840, 840, 840, 840,
    870, 840, 872, 876, 878, 880, 882, 570, 666, 884, 916, 884, 920, 916, 964, 966, 916, 970, 840, 840, 972, 840, 840,
    840, 840, 840, 840, 840, 840, 840, 840, 840, 840, 840, 840, 840, 840, 840, 840, 974, 1012, 1048, 1066, 1084, 1110,
    1136, 1150, 1164, 1198, 1230, 840, 1276, 1318, 1336, 1378, 1396, 1400, 1410, 1420, 1424, 1456, 1500, 1504, 840,
    1508, 1552, 1554, 1584, 1588, 916, 1590, 1594, 1600, 1602, 1604, 1606, 1612, 1614, 1618, 1622, 710, 1626, 840, 1628,
    666, 1672, 1674, 1676, 1682, 1618, 1684, 840, 1688, 570, 1732, 1734, 1736, 1738, 1742, 1746, 1750, 1796, 1798, 1802,
    1804, 1806, 1810, 1812, 1814, 1820, 1822, 1824, 1826, 710, 1830, 1834, 1836, 1838, 1844, 1846, 1848, 1850, 1856,
    1858, 1862, 1864, 1866, 1882, 1884, 1886
};

static int action_list[1888] = {
    -1, 12, 33, 7, 40, 9, 43, 11, 45, 13, 126, 15, 261, 17, 262, 19, 265, 21, -1, -1, 37, 33, 38, 35, 42, 37, 43, 39,
    45, 41, 47, 43, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 260, 123, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274,
    65, 275, 67, 276, 69, -1, -1, -1, 846, -1, 852, -1, 834, 40, 25, -1, -1, 265, 27, -1, -1, 41, 29, -1, -1, -1, 840,
    -1, 744, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 94, 51, 124, 53, 269, 55, 270, 57, 271, 59,
    272, 61, 273, 63, 274, 65, 275, 67, -1, 816, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 94, 51,
    124, 53, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 810, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 269,
    55, 270, 57, -1, 798, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 269, 55, 270, 57, -1, 786, 37, 33, 42, 37, 43, 39, 45,
    41, 47, 43, 60, 45, 62, 47, 269, 55, 270, 57, 273, 63, 274, 65, -1, 774, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 60,
    45, 62, 47, 269, 55, 270, 57, 273, 63, 274, 65, -1, 768, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, -1, 738, 37, 33,
    42, 37, 43, 39, 45, 41, 47, 43, -1, 732, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 94, 51,
    269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 756, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60,
    45, 62, 47, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 762, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41,
    47, 43, 58, 93, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, 275,
    67, 276, 69, -1, -1, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 269,
    55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, 275, 67, 276, 69, -1, 822, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43,
    269, 55, 270, 57, -1, 792, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 269, 55, 270, 57, -1, 780, -1, 720, 37, 33, 42,
    37, 47, 43, -1, 708, 37, 33, 42, 37, 47, 43, -1, 702, -1, 714, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62,
    47, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 750, -1, 726, -1, 690, -1, 696, 37, 33, 38, 35, 41,
    119, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 269, 55, 270, 57, 271, 59, 272, 61,
    273, 63, 274, 65, 275, 67, 276, 69, -1, -1, -1, 828, -1, 804, -1, -1, 59, 131, 258, 133, 259, 135, 288, 137, 289,
    139, 291, 141, 296, 143, -1, -1, -1, 6, 59, 515, -1, -1, -1, 66, 59, 513, -1, -1, -1, 0, 265, 503, -1, -1, 265, 435,
    -1, -1, 265, 175, -1, -1, 265, 145, -1, -1, 123, 147, -1, -1, -1, 210, -1, 228, 38, 159, 59, 161, 125, 163, 258,
    165, 289, 167, 291, 169, 296, 143, 297, 171, -1, 186, 59, 489, -1, -1, 265, 481, -1, -1, -1, 222, 297, 479, -1, 198,
    -1, 270, -1, 216, 59, 477, -1, -1, -1, 192, 59, 219, 123, 221, -1, -1, 40, 177, -1, -1, -1, 120, 38, 159, 265, 186,
    297, 171, -1, 150, 265, 211, -1, -1, 41, 193, -1, -1, 44, 189, -1, 156, -1, 162, 38, 159, 297, 171, -1, 186, -1,
    168, 287, 197, -1, 132, -1, 126, 38, 159, 297, 171, -1, 186, 265, 630, 267, 205, -1, 144, -1, 138, 265, 207, -1, -1,
    -1, 636, 267, 209, -1, 180, -1, 642, 58, 213, -1, -1, 267, 205, -1, 630, -1, 174, -1, 252, -1, 246, -1, 276, -1,
    348, 33, 249, 40, 251, 43, 253, 45, 255, 59, 257, 123, 221, 126, 259, 258, 261, 261, 263, 262, 265, 263, 267, 264,
    269, 265, 630, 267, 205, 289, 271, 290, 273, 292, 275, 294, 277, 295, 279, 296, 143, -1, 366, -1, 372, 59, 471, -1,
    -1, 37, 293, 38, 295, 40, 297, 42, 299, 43, 301, 45, 303, 47, 305, 59, 469, 60, 307, 61, 309, 62, 311, 63, 313, 94,
    315, 124, 317, 269, 319, 270, 321, 271, 323, 272, 325, 273, 327, 274, 329, 275, 331, 276, 333, -1, 354, 265, 467,
    -1, -1, 125, 465, -1, -1, -1, 378, -1, 384, -1, 342, -1, 600, -1, 594, 264, 463, -1, 678, 33, 249, 40, 251, 43, 253,
    45, 255, 123, 221, 126, 259, 261, 263, 262, 265, 263, 267, 264, 269, 267, 205, 292, 275, 294, 277, 295, 279, -1,
    630, -1, 420, 59, 449, -1, 360, -1, 660, -1, 666, -1, 672, -1, 648, 33, 249, 40, 251, 43, 253, 45, 255, 123, 221,
    126, 259, 258, 285, 261, 263, 262, 265, 263, 267, 264, 269, 267, 205, 292, 275, 294, 277, 295, 279, -1, 630, 123,
    221, -1, -1, 37, 293, 38, 295, 40, 297, 42, 299, 43, 301, 45, 303, 47, 305, 60, 307, 61, 309, 62, 311, 63, 313, 94,
    315, 124, 317, 269, 319, 270, 321, 271, 323, 272, 325, 273, 327, 274, 329, 275, 331, 276, 333, -1, 300, -1, 306,
    293, 289, -1, 330, -1, 336, -1, 576, 37, 293, 38, 295, 40, 297, 42, 299, 43, 301, 45, 303, 47, 305, 60, 307, 62,
    311, 94, 315, 124, 317, 269, 319, 270, 321, 271, 323, 272, 325, 273, 327, 274, 329, 275, 331, -1, 552, 37, 293, 38,
    295, 40, 297, 42, 299, 43, 301, 45, 303, 47, 305, 60, 307, 62, 311, 94, 315, 124, 317, 269, 319, 270, 321, 271, 323,
    272, 325, 273, 327, 274, 329, -1, 546, 37, 293, 40, 297, 42, 299, 43, 301, 45, 303, 47, 305, 269, 319, 270, 321, -1,
    534, 37, 293, 40, 297, 42, 299, 43, 301, 45, 303, 47, 305, 269, 319, 270, 321, -1, 522, 37, 293, 40, 297, 42, 299,
    43, 301, 45, 303, 47, 305, 60, 307, 62, 311, 269, 319, 270, 321, 273, 327, 274, 329, -1, 510, 37, 293, 40, 297, 42,
    299, 43, 301, 45, 303, 47, 305, 60, 307, 62, 311, 269, 319, 270, 321, 273, 327, 274, 329, -1, 504, 37, 293, 40, 297,
    42, 299, 43, 301, 45, 303, 47, 305, -1, 474, 37, 293, 40, 297, 42, 299, 43, 301, 45, 303, 47, 305, -1, 468, 37, 293,
    38, 295, 40, 297, 42, 299, 43, 301, 45, 303, 47, 305, 60, 307, 62, 311, 94, 315, 269, 319, 270, 321, 271, 323, 272,
    325, 273, 327, 274, 329, -1, 492, 37, 293, 38, 295, 40, 297, 42, 299, 43, 301, 45, 303, 47, 305, 60, 307, 62, 311,
    269, 319, 270, 321, 271, 323, 272, 325, 273, 327, 274, 329, -1, 498, 37, 293, 38, 295, 40, 297, 42, 299, 43, 301,
    45, 303, 47, 305, 58, 357, 60, 307, 61, 309, 62, 311, 63, 313, 94, 315, 124, 317, 269, 319, 270, 321, 271, 323, 272,
    325, 273, 327, 274, 329, 275, 331, 276, 333, -1, -1, 37, 293, 38, 295, 40, 297, 42, 299, 43, 301, 45, 303, 47, 305,
    60, 307, 62, 311, 63, 313, 94, 315, 124, 317, 269, 319, 270, 321, 271, 323, 272, 325, 273, 327, 274, 329, 275, 331,
    276, 333, -1, 558, 37, 293, 40, 297, 42, 299, 43, 301, 45, 303, 47, 305, 269, 319, 270, 321, -1, 528, 37, 293, 38,
    295, 40, 297, 42, 299, 43, 301, 45, 303, 47, 305, 60, 307, 62, 311, 63, 313, 94, 315, 124, 317, 269, 319, 270, 321,
    271, 323, 272, 325, 273, 327, 274, 329, 275, 331, 276, 333, -1, 588, 37, 293, 40, 297, 42, 299, 43, 301, 45, 303,
    47, 305, 269, 319, 270, 321, -1, 516, 40, 297, -1, 456, 37, 293, 40, 297, 42, 299, 47, 305, -1, 444, 37, 293, 40,
    297, 42, 299, 47, 305, -1, 438, 40, 297, -1, 450, 33, 249, 40, 251, 43, 253, 45, 255, 123, 221, 126, 259, 261, 263,
    262, 265, 263, 267, 264, 269, 265, 630, 267, 205, 292, 275, 294, 277, 295, 279, -1, 606, 37, 293, 38, 295, 40, 297,
    42, 299, 43, 301, 45, 303, 47, 305, 60, 307, 61, 309, 62, 311, 63, 313, 94, 315, 124, 317, 269, 319, 270, 321, 271,
    323, 272, 325, 273, 327, 274, 329, 275, 331, 276, 333, -1, 618, 41, 387, -1, -1, 44, 383, -1, 612, 37, 293, 38, 295,
    40, 297, 42, 299, 43, 301, 45, 303, 47, 305, 60, 307, 61, 309, 62, 311, 63, 313, 94, 315, 124, 317, 269, 319, 270,
    321, 271, 323, 272, 325, 273, 327, 274, 329, 275, 331, 276, 333, -1, 624, -1, 582, 37, 293, 40, 297, 42, 299, 43,
    301, 45, 303, 47, 305, 60, 307, 62, 311, 269, 319, 270, 321, 271, 323, 272, 325, 273, 327, 274, 329, -1, 486, 40,
    297, -1, 462, -1, 324, 293, 399, -1, 288, 123, 221, 292, 275, -1, -1, -1, 318, -1, 312, -1, 294, 44, 425, 59, 427,
    -1, -1, -1, 90, 265, 413, -1, -1, 58, 417, -1, 108, 61, 421, -1, -1, -1, 114, 37, 293, 38, 295, 40, 297, 42, 299,
    43, 301, 45, 303, 47, 305, 60, 307, 61, 309, 62, 311, 63, 313, 94, 315, 124, 317, 269, 319, 270, 321, 271, 323, 272,
    325, 273, 327, 274, 329, 275, 331, 276, 333, -1, 102, -1, 402, -1, 96, 44, 443, 59, 445, -1, -1, -1, 72, 61, 439,
    -1, -1, 37, 293, 38, 295, 40, 297, 42, 299, 43, 301, 45, 303, 47, 305, 60, 307, 61, 309, 62, 311, 63, 313, 94, 315,
    124, 317, 269, 319, 270, 321, 271, 323, 272, 325, 273, 327, 274, 329, 275, 331, 276, 333, -1, 84, -1, 396, -1, 78,
    -1, 414, 40, 297, -1, 480, 40, 297, -1, 426, 40, 297, -1, 432, 37, 293, 38, 295, 40, 297, 41, 459, 42, 299, 43, 301,
    45, 303, 47, 305, 60, 307, 61, 309, 62, 311, 63, 313, 94, 315, 124, 317, 269, 319, 270, 321, 271, 323, 272, 325,
    273, 327, 274, 329, 275, 331, 276, 333, -1, -1, -1, 564, 40, 297, -1, 540, -1, 654, -1, 282, 267, 209, -1, 570, -1,
    390, -1, 408, 44, 443, 59, 475, -1, -1, -1, 234, -1, 264, -1, 204, 58, 483, -1, -1, 59, 487, -1, -1, -1, 240, -1,
    258, 59, 495, 123, 221, -1, -1, -1, 42, -1, 36, -1, 48, 44, 443, 59, 501, -1, -1, -1, 30, 123, 505, -1, -1, -1, 18,
    -1, 12, 59, 131, 125, 511, 258, 133, 288, 137, 289, 139, 291, 141, 296, 143, -1, -1, -1, 24, -1, 60, -1, 54
};

static int reduce_info[429] = {
    2, 0, 0, 2, 2, 0, 0, 2, 0, 0, 8, 1, 6, 6, 2, 3, 6, 0, 3, 6, 54, 0, 36, 55, 4, 6, 54, 2, 6, 0, 2, 6, 0, 1, 6, 0, 1,
    10, 0, 3, 10, 0, 4, 44, 41, 1, 116, 0, 3, 116, 0, 5, 118, 42, 0, 48, 59, 2, 48, 43, 0, 144, 52, 6, 16, 53, 0, 142,
    59, 3, 142, 57, 2, 142, 58, 0, 140, 0, 1, 140, 0, 1, 146, 0, 3, 146, 0, 4, 148, 56, 2, 132, 60, 0, 122, 61, 1, 122,
    62, 1, 122, 63, 2, 122, 64, 0, 164, 65, 6, 38, 2, 2, 162, 0, 0, 162, 0, 3, 166, 0, 5, 166, 66, 3, 166, 54, 3, 166,
    55, 2, 166, 0, 2, 166, 0, 1, 166, 0, 0, 172, 44, 5, 20, 2, 3, 174, 47, 5, 174, 48, 1, 178, 0, 1, 178, 0, 1, 182, 0,
    1, 182, 0, 2, 184, 49, 3, 184, 50, 5, 184, 51, 2, 168, 0, 0, 168, 0, 1, 170, 45, 1, 170, 0, 0, 170, 0, 1, 188, 0, 1,
    188, 0, 1, 188, 0, 2, 186, 46, 3, 186, 0, 3, 186, 0, 2, 186, 0, 2, 186, 0, 1, 186, 0, 2, 52, 11, 2, 52, 12, 3, 52,
    13, 3, 52, 14, 3, 52, 15, 3, 52, 16, 3, 52, 17, 3, 52, 18, 3, 52, 19, 2, 52, 20, 3, 52, 21, 3, 52, 22, 3, 52, 23, 3,
    52, 24, 3, 52, 25, 3, 52, 26, 3, 52, 27, 3, 52, 28, 3, 52, 29, 2, 52, 30, 3, 52, 31, 3, 52, 32, 5, 52, 33, 3, 52,
    34, 2, 52, 35, 0, 192, 38, 5, 52, 36, 3, 52, 37, 1, 52, 0, 1, 52, 0, 0, 190, 0, 1, 190, 0, 1, 196, 39, 3, 196, 40,
    0, 152, 4, 1, 152, 5, 3, 152, 6, 1, 198, 0, 2, 198, 3, 1, 194, 7, 1, 194, 8, 1, 194, 9, 1, 194, 10, 2, 200, 0, 2,
    202, 67, 2, 202, 68, 3, 202, 69, 3, 202, 70, 3, 202, 71, 3, 202, 72, 3, 202, 73, 3, 202, 74, 3, 202, 75, 2, 202, 76,
    3, 202, 77, 3, 202, 78, 3, 202, 79, 3, 202, 80, 3, 202, 81, 3, 202, 82, 3, 202, 83, 3, 202, 85, 3, 202, 84, 2, 202,
    86, 3, 202, 87, 3, 202, 88, 5, 202, 89, 3, 202, 90, 0, 254, 91, 5, 202, 92, 1, 202, 0, 1, 202, 0
};

static int goto_list[256] = {
    -1, 0, 253, 254, -1, 62, -1, 63, -1, 253, 69, 249, 83, 236, -1, 215, 70, 245, -1, 86, 86, 108, 138, 196, 141, 143,
    144, 145, 197, 198, 199, 200, 245, 246, -1, 113, -1, 248, 75, 76, 112, 114, -1, 64, 221, 223, -1, 216, 217, 218, -1,
    207, 112, 115, 124, 230, 125, 228, 126, 227, 127, 226, 129, 225, 146, 195, 147, 194, 149, 186, 150, 185, 151, 184,
    152, 183, 153, 182, 154, 181, 155, 180, 156, 177, 157, 176, 158, 175, 159, 174, 160, 173, 161, 172, 162, 171, 163,
    170, 164, 169, 165, 168, 166, 167, 178, 179, 187, 188, 191, 192, 210, 211, 219, 220, -1, 140, -1, 203, 212, 214, -1,
    204, 75, 77, 98, 99, 136, 205, 212, 205, -1, 90, 106, 107, 208, 209, 241, 242, -1, 100, -1, 91, -1, 97, -1, 89, -1,
    92, 94, 95, -1, 93, 99, 101, 106, 101, 208, 101, 241, 101, -1, 116, -1, 75, -1, 74, -1, 78, -1, 112, -1, 117, -1,
    111, 199, 201, -1, 118, 137, 197, -1, 141, -1, 202, -1, 119, -1, 120, -1, 121, -1, 189, -1, 187, -1, 122, -1, 190,
    -1, 123, -1, 0, 3, 60, 4, 58, 5, 57, 6, 56, 7, 15, 16, 55, 17, 54, 18, 53, 19, 52, 20, 51, 21, 50, 22, 49, 23, 48,
    24, 45, 25, 44, 26, 43, 27, 42, 28, 41, 29, 40, 30, 39, 31, 38, 32, 37, 33, 36, 34, 35, 46, 47, -1, 2, -1, 11
};

static int parse(int tt, int* sptr0, int** p_sptr, int rise_error) {
    enum { kShiftFlag = 1, kFlagCount = 1 };
    int action = rise_error;
    if (action >= 0) {
        const int* action_tbl = &action_list[action_idx[*(*p_sptr - 1)]];
        while (action_tbl[0] >= 0 && action_tbl[0] != tt) { action_tbl += 2; }
        action = action_tbl[1];
    }
    if (action >= 0) {
        if (!(action & kShiftFlag)) {
            const int* info = &reduce_info[action >> kFlagCount];
            const int* goto_tbl = &goto_list[info[1]];
            int state = *((*p_sptr -= info[0]) - 1);
            while (goto_tbl[0] >= 0 && goto_tbl[0] != state) { goto_tbl += 2; }
            *(*p_sptr)++ = goto_tbl[1];
            return predef_act_reduce + info[2];
        }
        *(*p_sptr)++ = action >> kFlagCount;
        return predef_act_shift;
    }
    /* Roll back to state, which can accept error */
    do {
        const int* action_tbl = &action_list[action_idx[*(*p_sptr - 1)]];
        while (action_tbl[0] >= 0 && action_tbl[0] != predef_tt_error) { action_tbl += 2; }
        if (action_tbl[1] >= 0 && (action_tbl[1] & kShiftFlag)) { /* Can recover */
            *(*p_sptr)++ = action_tbl[1] >> kFlagCount;           /* Shift error token */
            break;
        }
    } while (--*p_sptr != sptr0);
    return action;
}
