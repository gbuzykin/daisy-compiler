/* Parsegen autogenerated analyzer file - do not edit! */
/* clang-format off */

static int action_idx[244] = {
    0, 2, 20, 2, 2, 2, 2, 2, 62, 64, 66, 68, 72, 76, 80, 82, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    84, 120, 154, 170, 186, 210, 234, 246, 258, 290, 320, 2, 362, 402, 418, 434, 436, 444, 452, 454, 482, 484, 486, 488,
    530, 532, 534, 536, 552, 554, 558, 560, 564, 566, 570, 574, 578, 582, 586, 588, 590, 604, 608, 612, 614, 616, 618,
    570, 574, 622, 628, 632, 634, 638, 642, 646, 650, 652, 654, 656, 660, 662, 664, 668, 670, 674, 676, 680, 682, 664,
    686, 688, 690, 692, 694, 696, 738, 740, 744, 786, 790, 794, 796, 798, 800, 802, 804, 808, 808, 808, 808, 838, 808,
    840, 844, 846, 848, 850, 570, 652, 852, 884, 852, 888, 884, 928, 930, 884, 934, 808, 808, 808, 808, 808, 808, 808,
    808, 808, 808, 808, 808, 808, 808, 808, 808, 808, 808, 808, 936, 972, 1006, 1022, 1038, 1062, 1086, 1098, 1110,
    1142, 1172, 808, 1214, 1254, 1270, 1286, 1288, 1296, 1304, 1306, 1334, 1336, 884, 1338, 1342, 1348, 1350, 1352,
    1354, 1360, 1362, 1366, 1370, 664, 1374, 808, 1376, 652, 1416, 1418, 1420, 1426, 1366, 1428, 808, 1432, 570, 1472,
    1474, 1476, 1478, 1480, 1482, 1484, 1526, 1528, 1530, 1532, 1534, 1538, 1540, 1542, 1548, 1550, 1552, 664, 1556,
    1560, 1562, 1564, 1570, 1572, 1574, 1580, 1582, 1586, 1588, 1590, 1606, 1608, 1610
};

static int action_list[1612] = {
    -1, 12, 33, 7, 40, 9, 43, 11, 45, 13, 126, 15, 261, 17, 262, 19, 265, 21, -1, -1, 37, 33, 38, 35, 42, 37, 43, 39,
    45, 41, 47, 43, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 260, 123, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274,
    65, 275, 67, 276, 69, -1, -1, -1, 774, -1, 780, -1, 762, 40, 25, -1, -1, 265, 27, -1, -1, 41, 29, -1, -1, -1, 768,
    -1, 672, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 94, 51, 124, 53, 269, 55, 270, 57, 271, 59,
    272, 61, 273, 63, 274, 65, 275, 67, -1, 744, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 94, 51,
    124, 53, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 738, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 269,
    55, 270, 57, -1, 726, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 269, 55, 270, 57, -1, 714, 37, 33, 42, 37, 43, 39, 45,
    41, 47, 43, 60, 45, 62, 47, 269, 55, 270, 57, 273, 63, 274, 65, -1, 702, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 60,
    45, 62, 47, 269, 55, 270, 57, 273, 63, 274, 65, -1, 696, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, -1, 666, 37, 33,
    42, 37, 43, 39, 45, 41, 47, 43, -1, 660, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 94, 51,
    269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 684, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60,
    45, 62, 47, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 690, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41,
    47, 43, 58, 93, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, 275,
    67, 276, 69, -1, -1, 37, 33, 38, 35, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 269,
    55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, 275, 67, 276, 69, -1, 750, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43,
    269, 55, 270, 57, -1, 720, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 269, 55, 270, 57, -1, 708, -1, 648, 37, 33, 42,
    37, 47, 43, -1, 636, 37, 33, 42, 37, 47, 43, -1, 630, -1, 642, 37, 33, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62,
    47, 269, 55, 270, 57, 271, 59, 272, 61, 273, 63, 274, 65, -1, 678, -1, 654, -1, 618, -1, 624, 37, 33, 38, 35, 41,
    119, 42, 37, 43, 39, 45, 41, 47, 43, 60, 45, 62, 47, 63, 49, 94, 51, 124, 53, 269, 55, 270, 57, 271, 59, 272, 61,
    273, 63, 274, 65, 275, 67, 276, 69, -1, -1, -1, 756, -1, 732, -1, -1, 59, 131, 258, 133, 259, 135, 288, 137, 289,
    139, 291, 141, 296, 143, -1, -1, -1, 6, 59, 487, -1, -1, -1, 60, 59, 485, -1, -1, -1, 0, 265, 475, -1, -1, 265, 411,
    -1, -1, 265, 171, -1, -1, 265, 145, -1, -1, 123, 147, -1, -1, -1, 180, -1, 198, 59, 159, 125, 161, 258, 163, 289,
    165, 291, 167, 296, 143, -1, 174, 59, 463, -1, -1, 265, 455, -1, -1, -1, 192, -1, 240, -1, 186, 59, 453, -1, -1, 59,
    215, 123, 217, -1, -1, 40, 173, -1, -1, -1, 114, 265, 174, -1, 144, 265, 207, -1, -1, 41, 189, -1, -1, 44, 185, -1,
    138, -1, 150, -1, 174, -1, 156, 287, 193, -1, 132, -1, 120, -1, 174, 267, 201, -1, 558, -1, 126, 265, 203, -1, -1,
    -1, 564, 267, 205, -1, 168, -1, 570, 58, 209, -1, -1, -1, 162, -1, 222, -1, 216, -1, 246, -1, 318, 33, 245, 40, 247,
    43, 249, 45, 251, 59, 253, 123, 217, 126, 255, 258, 257, 261, 259, 262, 261, 263, 263, 264, 265, 265, 558, 267, 201,
    289, 267, 290, 269, 292, 271, 294, 273, 295, 275, 296, 143, -1, 336, -1, 342, 59, 447, -1, -1, 37, 289, 38, 291, 42,
    293, 43, 295, 45, 297, 47, 299, 59, 445, 60, 301, 62, 303, 63, 305, 94, 307, 124, 309, 269, 311, 270, 313, 271, 315,
    272, 317, 273, 319, 274, 321, 275, 323, 276, 325, -1, 324, 265, 443, -1, -1, 125, 441, -1, -1, -1, 348, -1, 354, -1,
    312, -1, 552, -1, 546, 264, 439, -1, 606, 33, 245, 40, 247, 43, 249, 45, 251, 123, 217, 126, 255, 261, 259, 262,
    261, 263, 263, 264, 265, 267, 201, 292, 271, 294, 273, 295, 275, -1, 558, -1, 390, 59, 425, -1, 330, -1, 588, -1,
    594, -1, 600, -1, 576, 33, 245, 40, 247, 43, 249, 45, 251, 123, 217, 126, 255, 258, 281, 261, 259, 262, 261, 263,
    263, 264, 265, 267, 201, 292, 271, 294, 273, 295, 275, -1, 558, 123, 217, -1, -1, 37, 289, 38, 291, 42, 293, 43,
    295, 45, 297, 47, 299, 60, 301, 62, 303, 63, 305, 94, 307, 124, 309, 269, 311, 270, 313, 271, 315, 272, 317, 273,
    319, 274, 321, 275, 323, 276, 325, -1, 270, -1, 276, 293, 285, -1, 300, -1, 306, 37, 289, 38, 291, 42, 293, 43, 295,
    45, 297, 47, 299, 60, 301, 62, 303, 94, 307, 124, 309, 269, 311, 270, 313, 271, 315, 272, 317, 273, 319, 274, 321,
    275, 323, -1, 522, 37, 289, 38, 291, 42, 293, 43, 295, 45, 297, 47, 299, 60, 301, 62, 303, 94, 307, 124, 309, 269,
    311, 270, 313, 271, 315, 272, 317, 273, 319, 274, 321, -1, 516, 37, 289, 42, 293, 43, 295, 45, 297, 47, 299, 269,
    311, 270, 313, -1, 504, 37, 289, 42, 293, 43, 295, 45, 297, 47, 299, 269, 311, 270, 313, -1, 492, 37, 289, 42, 293,
    43, 295, 45, 297, 47, 299, 60, 301, 62, 303, 269, 311, 270, 313, 273, 319, 274, 321, -1, 480, 37, 289, 42, 293, 43,
    295, 45, 297, 47, 299, 60, 301, 62, 303, 269, 311, 270, 313, 273, 319, 274, 321, -1, 474, 37, 289, 42, 293, 43, 295,
    45, 297, 47, 299, -1, 444, 37, 289, 42, 293, 43, 295, 45, 297, 47, 299, -1, 438, 37, 289, 38, 291, 42, 293, 43, 295,
    45, 297, 47, 299, 60, 301, 62, 303, 94, 307, 269, 311, 270, 313, 271, 315, 272, 317, 273, 319, 274, 321, -1, 462,
    37, 289, 38, 291, 42, 293, 43, 295, 45, 297, 47, 299, 60, 301, 62, 303, 269, 311, 270, 313, 271, 315, 272, 317, 273,
    319, 274, 321, -1, 468, 37, 289, 38, 291, 42, 293, 43, 295, 45, 297, 47, 299, 58, 349, 60, 301, 62, 303, 63, 305,
    94, 307, 124, 309, 269, 311, 270, 313, 271, 315, 272, 317, 273, 319, 274, 321, 275, 323, 276, 325, -1, -1, 37, 289,
    38, 291, 42, 293, 43, 295, 45, 297, 47, 299, 60, 301, 62, 303, 63, 305, 94, 307, 124, 309, 269, 311, 270, 313, 271,
    315, 272, 317, 273, 319, 274, 321, 275, 323, 276, 325, -1, 528, 37, 289, 42, 293, 43, 295, 45, 297, 47, 299, 269,
    311, 270, 313, -1, 498, 37, 289, 42, 293, 43, 295, 45, 297, 47, 299, 269, 311, 270, 313, -1, 486, -1, 426, 37, 289,
    42, 293, 47, 299, -1, 414, 37, 289, 42, 293, 47, 299, -1, 408, -1, 420, 37, 289, 42, 293, 43, 295, 45, 297, 47, 299,
    60, 301, 62, 303, 269, 311, 270, 313, 271, 315, 272, 317, 273, 319, 274, 321, -1, 456, -1, 432, -1, 294, 293, 375,
    -1, 258, 123, 217, 292, 271, -1, -1, -1, 288, -1, 282, -1, 264, 44, 401, 59, 403, -1, -1, -1, 84, 265, 389, -1, -1,
    58, 393, -1, 108, 61, 397, -1, -1, -1, 102, 37, 289, 38, 291, 42, 293, 43, 295, 45, 297, 47, 299, 60, 301, 62, 303,
    63, 305, 94, 307, 124, 309, 269, 311, 270, 313, 271, 315, 272, 317, 273, 319, 274, 321, 275, 323, 276, 325, -1, 96,
    -1, 372, -1, 90, 44, 419, 59, 421, -1, -1, -1, 66, 61, 415, -1, -1, 37, 289, 38, 291, 42, 293, 43, 295, 45, 297, 47,
    299, 60, 301, 62, 303, 63, 305, 94, 307, 124, 309, 269, 311, 270, 313, 271, 315, 272, 317, 273, 319, 274, 321, 275,
    323, 276, 325, -1, 78, -1, 366, -1, 72, -1, 384, -1, 450, -1, 396, -1, 402, 37, 289, 38, 291, 41, 435, 42, 293, 43,
    295, 45, 297, 47, 299, 60, 301, 62, 303, 63, 305, 94, 307, 124, 309, 269, 311, 270, 313, 271, 315, 272, 317, 273,
    319, 274, 321, 275, 323, 276, 325, -1, -1, -1, 534, -1, 510, -1, 582, -1, 252, 267, 205, -1, 540, -1, 360, -1, 378,
    44, 419, 59, 451, -1, -1, -1, 204, -1, 234, 58, 457, -1, -1, 59, 461, -1, -1, -1, 210, -1, 228, 59, 469, 123, 217,
    -1, -1, -1, 42, -1, 36, 44, 419, 59, 473, -1, -1, -1, 30, 123, 477, -1, -1, -1, 18, -1, 12, 59, 131, 125, 483, 258,
    133, 288, 137, 289, 139, 291, 141, 296, 143, -1, -1, -1, 24, -1, 54, -1, 48
};

static int reduce_info[393] = {
    2, 0, 0, 2, 2, 0, 0, 2, 0, 0, 8, 1, 6, 6, 2, 3, 6, 0, 3, 6, 47, 3, 6, 48, 2, 6, 0, 2, 6, 0, 1, 6, 0, 1, 10, 0, 3,
    10, 0, 4, 42, 36, 1, 108, 0, 3, 108, 0, 5, 110, 37, 2, 46, 0, 0, 46, 0, 0, 136, 46, 6, 16, 0, 3, 134, 0, 0, 134, 0,
    1, 132, 0, 0, 132, 0, 1, 138, 0, 3, 138, 0, 4, 140, 49, 2, 124, 0, 0, 114, 0, 0, 156, 50, 6, 36, 2, 2, 154, 0, 0,
    154, 0, 3, 158, 0, 5, 158, 51, 3, 158, 47, 3, 158, 48, 2, 158, 0, 2, 158, 0, 1, 158, 0, 0, 164, 38, 5, 20, 2, 3,
    166, 41, 5, 166, 42, 1, 170, 0, 1, 170, 0, 1, 174, 0, 1, 174, 0, 2, 176, 43, 3, 176, 44, 5, 176, 45, 2, 160, 0, 0,
    160, 0, 1, 162, 39, 1, 162, 0, 0, 162, 0, 1, 180, 0, 1, 180, 0, 1, 180, 0, 2, 178, 40, 3, 178, 0, 3, 178, 0, 2, 178,
    0, 2, 178, 0, 1, 178, 0, 2, 50, 11, 2, 50, 12, 3, 50, 13, 3, 50, 14, 3, 50, 15, 3, 50, 16, 3, 50, 17, 3, 50, 18, 3,
    50, 19, 2, 50, 20, 3, 50, 21, 3, 50, 22, 3, 50, 23, 3, 50, 24, 3, 50, 25, 3, 50, 26, 3, 50, 27, 3, 50, 28, 3, 50,
    29, 2, 50, 30, 3, 50, 31, 3, 50, 32, 5, 50, 33, 3, 50, 34, 2, 50, 35, 1, 50, 0, 1, 50, 0, 0, 144, 4, 1, 144, 5, 3,
    144, 6, 1, 184, 0, 2, 184, 3, 1, 182, 7, 1, 182, 8, 1, 182, 9, 1, 182, 10, 2, 186, 0, 2, 188, 52, 2, 188, 53, 3,
    188, 54, 3, 188, 55, 3, 188, 56, 3, 188, 57, 3, 188, 58, 3, 188, 59, 3, 188, 60, 2, 188, 61, 3, 188, 62, 3, 188, 63,
    3, 188, 64, 3, 188, 65, 3, 188, 66, 3, 188, 67, 3, 188, 68, 3, 188, 70, 3, 188, 69, 2, 188, 71, 3, 188, 72, 3, 188,
    73, 5, 188, 74, 3, 188, 75, 0, 240, 76, 5, 188, 77, 1, 188, 0, 1, 188, 0
};

static int goto_list[242] = {
    -1, 0, 239, 240, -1, 62, -1, 63, -1, 239, 69, 235, 82, 224, -1, 203, 70, 232, -1, 84, 84, 106, 136, 184, 139, 141,
    142, 143, 185, 186, 187, 188, 232, 233, -1, 111, 75, 76, 110, 112, -1, 64, 209, 211, -1, 204, 205, 206, -1, 195,
    110, 113, 122, 218, 123, 216, 124, 215, 125, 214, 127, 213, 144, 183, 145, 182, 146, 181, 147, 180, 148, 179, 149,
    178, 150, 177, 151, 176, 152, 173, 153, 172, 154, 171, 155, 170, 156, 169, 157, 168, 158, 167, 159, 166, 160, 165,
    161, 164, 162, 163, 174, 175, 198, 199, 207, 208, -1, 138, -1, 191, 200, 202, -1, 192, 75, 77, 96, 97, 134, 193,
    200, 193, -1, 88, 104, 105, 196, 197, 228, 229, -1, 98, -1, 89, -1, 95, -1, 87, -1, 90, 92, 93, -1, 91, 97, 99, 104,
    99, 196, 99, 228, 99, -1, 114, -1, 75, -1, 74, -1, 78, -1, 110, -1, 115, -1, 109, 187, 189, -1, 116, 135, 185, -1,
    139, -1, 190, -1, 117, -1, 118, -1, 119, -1, 120, -1, 121, -1, 0, 3, 60, 4, 58, 5, 57, 6, 56, 7, 15, 16, 55, 17, 54,
    18, 53, 19, 52, 20, 51, 21, 50, 22, 49, 23, 48, 24, 45, 25, 44, 26, 43, 27, 42, 28, 41, 29, 40, 30, 39, 31, 38, 32,
    37, 33, 36, 34, 35, 46, 47, -1, 2, -1, 11
};

static int parse(int tt, int* sptr0, int** p_sptr, int rise_error) {
    enum { kShiftFlag = 1, kFlagCount = 1 };
    int action = rise_error;
    if (action >= 0) {
        const int* action_tbl = &action_list[action_idx[*(*p_sptr - 1)]];
        while (action_tbl[0] >= 0 && action_tbl[0] != tt) { action_tbl += 2; }
        action = action_tbl[1];
    }
    if (action >= 0) {
        if (!(action & kShiftFlag)) {
            const int* info = &reduce_info[action >> kFlagCount];
            const int* goto_tbl = &goto_list[info[1]];
            int state = *((*p_sptr -= info[0]) - 1);
            while (goto_tbl[0] >= 0 && goto_tbl[0] != state) { goto_tbl += 2; }
            *(*p_sptr)++ = goto_tbl[1];
            return predef_act_reduce + info[2];
        }
        *(*p_sptr)++ = action >> kFlagCount;
        return predef_act_shift;
    }
    /* Roll back to state, which can accept error */
    do {
        const int* action_tbl = &action_list[action_idx[*(*p_sptr - 1)]];
        while (action_tbl[0] >= 0 && action_tbl[0] != predef_tt_error) { action_tbl += 2; }
        if (action_tbl[1] >= 0 && (action_tbl[1] & kShiftFlag)) { /* Can recover */
            *(*p_sptr)++ = action_tbl[1] >> kFlagCount;           /* Shift error token */
            break;
        }
    } while (--*p_sptr != sptr0);
    return action;
}
