/* Parsegen autogenerated analyzer file - do not edit! */
/* clang-format off */

static int action_idx[70] = {
    0, 2, 12, 14, 16, 20, 22, 26, 30, 52, 94, 30, 30, 30, 30, 30, 98, 100, 102, 104, 106, 108, 30, 30, 30, 30, 30, 30,
    30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 110, 146, 180, 196, 212, 236, 260, 272, 284, 316, 346, 30, 388,
    428, 444, 460, 462, 470, 478, 480, 508, 510, 512, 514, 556, 558, 560, 562, 564
};

static int action_list[566] = {
    -1, 12, 59, 7, 258, 9, 259, 11, 290, 13, -1, -1, -1, 6, -1, 30, 59, 139, -1, -1, -1, 0, 265, 15, -1, -1, 61, 17, -1,
    -1, 33, 23, 40, 25, 43, 27, 45, 29, 126, 31, 261, 33, 262, 35, 263, 37, 264, 39, 265, 41, -1, -1, 37, 45, 38, 47,
    42, 49, 43, 51, 45, 53, 47, 55, 59, 137, 60, 57, 62, 59, 63, 61, 94, 63, 124, 65, 271, 67, 272, 69, 273, 71, 274,
    73, 275, 75, 276, 77, 277, 79, 278, 81, -1, -1, 264, 135, -1, 204, -1, 186, -1, 192, -1, 198, -1, 210, -1, 180, -1,
    48, 37, 45, 38, 47, 42, 49, 43, 51, 45, 53, 47, 55, 60, 57, 62, 59, 94, 63, 124, 65, 271, 67, 272, 69, 273, 71, 274,
    73, 275, 75, 276, 77, 277, 79, -1, 162, 37, 45, 38, 47, 42, 49, 43, 51, 45, 53, 47, 55, 60, 57, 62, 59, 94, 63, 124,
    65, 271, 67, 272, 69, 273, 71, 274, 73, 275, 75, 276, 77, -1, 156, 37, 45, 42, 49, 43, 51, 45, 53, 47, 55, 271, 67,
    272, 69, -1, 144, 37, 45, 42, 49, 43, 51, 45, 53, 47, 55, 271, 67, 272, 69, -1, 132, 37, 45, 42, 49, 43, 51, 45, 53,
    47, 55, 60, 57, 62, 59, 271, 67, 272, 69, 275, 75, 276, 77, -1, 120, 37, 45, 42, 49, 43, 51, 45, 53, 47, 55, 60, 57,
    62, 59, 271, 67, 272, 69, 275, 75, 276, 77, -1, 114, 37, 45, 42, 49, 43, 51, 45, 53, 47, 55, -1, 90, 37, 45, 42, 49,
    43, 51, 45, 53, 47, 55, -1, 84, 37, 45, 38, 47, 42, 49, 43, 51, 45, 53, 47, 55, 60, 57, 62, 59, 94, 63, 271, 67,
    272, 69, 273, 71, 274, 73, 275, 75, 276, 77, -1, 102, 37, 45, 38, 47, 42, 49, 43, 51, 45, 53, 47, 55, 60, 57, 62,
    59, 271, 67, 272, 69, 273, 71, 274, 73, 275, 75, 276, 77, -1, 108, 37, 45, 38, 47, 42, 49, 43, 51, 45, 53, 47, 55,
    58, 105, 60, 57, 62, 59, 63, 61, 94, 63, 124, 65, 271, 67, 272, 69, 273, 71, 274, 73, 275, 75, 276, 77, 277, 79,
    278, 81, -1, -1, 37, 45, 38, 47, 42, 49, 43, 51, 45, 53, 47, 55, 60, 57, 62, 59, 63, 61, 94, 63, 124, 65, 271, 67,
    272, 69, 273, 71, 274, 73, 275, 75, 276, 77, 277, 79, 278, 81, -1, 168, 37, 45, 42, 49, 43, 51, 45, 53, 47, 55, 271,
    67, 272, 69, -1, 138, 37, 45, 42, 49, 43, 51, 45, 53, 47, 55, 271, 67, 272, 69, -1, 126, -1, 72, 37, 45, 42, 49, 47,
    55, -1, 60, 37, 45, 42, 49, 47, 55, -1, 54, -1, 66, 37, 45, 42, 49, 43, 51, 45, 53, 47, 55, 60, 57, 62, 59, 271, 67,
    272, 69, 273, 71, 274, 73, 275, 75, 276, 77, -1, 96, -1, 78, -1, 36, -1, 42, 37, 45, 38, 47, 41, 131, 42, 49, 43,
    51, 45, 53, 47, 55, 60, 57, 62, 59, 63, 61, 94, 63, 124, 65, 271, 67, 272, 69, 273, 71, 274, 73, 275, 75, 276, 77,
    277, 79, 278, 81, -1, -1, -1, 174, -1, 150, -1, 216, -1, 18, -1, 24
};

static int reduce_info[111] = {
    2, 0, 0, 2, 2, 0, 0, 2, 0, 5, 4, 0, 2, 4, 0, 1, 4, 0, 2, 6, 0, 2, 6, 0, 2, 6, 0, 3, 6, 0, 3, 6, 0, 3, 6, 0, 3, 6, 0,
    3, 6, 0, 3, 6, 0, 3, 6, 0, 3, 6, 0, 3, 6, 0, 3, 6, 0, 3, 6, 0, 3, 6, 0, 3, 6, 0, 3, 6, 0, 3, 6, 0, 3, 6, 0, 2, 6, 0,
    3, 6, 0, 3, 6, 0, 5, 6, 0, 3, 6, 0, 1, 6, 0, 1, 6, 0, 1, 6, 0, 1, 6, 0, 1, 6, 0, 1, 58, 0, 2, 58, 0
};

static int goto_list[60] = {
    -1, 0, -1, 1, -1, 2, 11, 66, 12, 64, 13, 63, 14, 62, 15, 21, 22, 61, 23, 60, 24, 59, 25, 58, 26, 57, 27, 56, 28, 55,
    29, 54, 30, 51, 31, 50, 32, 49, 33, 48, 34, 47, 35, 46, 36, 45, 37, 44, 38, 43, 39, 42, 40, 41, 52, 53, -1, 9, -1,
    10
};

static int parse(int tt, int* sptr0, int** p_sptr, int rise_error) {
    enum { kShiftFlag = 1, kFlagCount = 1 };
    int action = rise_error;
    if (action >= 0) {
        const int* action_tbl = &action_list[action_idx[*(*p_sptr - 1)]];
        while (action_tbl[0] >= 0 && action_tbl[0] != tt) { action_tbl += 2; }
        action = action_tbl[1];
    }
    if (action >= 0) {
        if (!(action & kShiftFlag)) {
            const int* info = &reduce_info[action >> kFlagCount];
            const int* goto_tbl = &goto_list[info[1]];
            int state = *((*p_sptr -= info[0]) - 1);
            while (goto_tbl[0] >= 0 && goto_tbl[0] != state) { goto_tbl += 2; }
            *(*p_sptr)++ = goto_tbl[1];
            return predef_act_reduce + info[2];
        }
        *(*p_sptr)++ = action >> kFlagCount;
        return predef_act_shift;
    }
    /* Roll back to state, which can accept error */
    do {
        const int* action_tbl = &action_list[action_idx[*(*p_sptr - 1)]];
        while (action_tbl[0] >= 0 && action_tbl[0] != predef_tt_error) { action_tbl += 2; }
        if (action_tbl[1] >= 0 && (action_tbl[1] & kShiftFlag)) { /* Can recover */
            *(*p_sptr)++ = action_tbl[1] >> kFlagCount;           /* Shift error token */
            break;
        }
    } while (--*p_sptr != sptr0);
    return action;
}
